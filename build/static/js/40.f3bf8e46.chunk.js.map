{"version":3,"sources":["components/Checkout/AddressInput.js","components/Checkout/BillingAddress.js"],"names":["AddressInput","observer","props","store","useContext","CheckoutStore","className","type","id","name","placeholder","defaultValue","AddressObject","onBlur","event","set","target","value","updateAddress","BillingAddress","addressType","style","marginTop","defaultChecked","sameAsShipping","onClick"],"mappings":"mIAAA,wFAWaA,EAAeC,aAAS,SAAAC,GACnC,IAAMC,EAAQC,qBAAWC,KACzB,OACE,yBAAKC,UAAU,SACb,2BACEA,UAAU,QACVC,KAAK,OACLC,GAAIN,EAAMO,KACVC,YAAaR,EAAMQ,YACnBC,aACER,EAAMD,EAAMU,gBAAkBT,EAAMD,EAAMU,eAAeV,EAAMO,MAEjEI,OAAQ,SAAAC,GACNX,EAAMD,EAAMU,eAAeG,IAAIb,EAAMO,KAAMK,EAAME,OAAOC,OACxDd,EAAMe,wB,gCCzBhB,mDAiBMC,EAAiBlB,aAAS,WAC9B,IAAME,EAAQC,qBAAWC,KACnBe,EAAc,iBACpB,OACE,yBAAKd,UAAU,OACb,+CACA,wBAAIe,MAAO,CAAEC,UAAW,SACxB,+BACE,2BACEf,KAAK,WACLgB,eAAgBpB,EAAMqB,eACtBC,QAAS,WACPtB,EAAMY,IAAI,kBAAmBZ,EAAMqB,mBALzC,iCAWErB,EAAMqB,gBACN,6BACE,kBAAC,eAAD,CACEZ,cAAeQ,EACfX,KAAM,OACNC,YAAa,SAEf,kBAAC,eAAD,CACEE,cAAeQ,EACfX,KAAM,WACNC,YAAa,YAEf,kBAAC,eAAD,CACEE,cAAeQ,EACfX,KAAM,WACNC,YAAa,mBAEf,yBAAKJ,UAAU,WACb,yBAAKA,UAAU,eACb,kBAAC,eAAD,CACEM,cAAeQ,EACfX,KAAM,OACNC,YAAa,UAGjB,yBAAKJ,UAAU,eACb,kBAAC,eAAD,CACEM,cAAeQ,EACfX,KAAM,QACNC,YAAa,WAGjB,yBAAKJ,UAAU,eACb,kBAAC,eAAD,CACEM,cAAeQ,EACfX,KAAM,UACNC,YAAa,mBAUdS","file":"static/js/40.f3bf8e46.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\n\nimport CheckoutStore from '../../stores/CheckoutStore'\n/**\n * AddressInput observes the CheckoutStore\n *\n * AddressInput takes user input and then updates the billing address first\n * on the store then it runs the funciton `store.updateAddress()` that then\n * calls a mutation on the server.\n */\nexport const AddressInput = observer(props => {\n  const store = useContext(CheckoutStore)\n  return (\n    <div className=\"field\">\n      <input\n        className=\"input\"\n        type=\"text\"\n        id={props.name}\n        placeholder={props.placeholder}\n        defaultValue={\n          store[props.AddressObject] && store[props.AddressObject][props.name]\n        }\n        onBlur={event => {\n          store[props.AddressObject].set(props.name, event.target.value)\n          store.updateAddress()\n        }}\n      />\n    </div>\n  )\n})\n","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\n\nimport CheckoutStore from '../../stores/CheckoutStore'\nimport { AddressInput } from './AddressInput'\n/**\n * BillingAddress observes the CheckoutStore\n *\n * BillingAddress contains many AddressInput fields to comprise\n * a larger billing address. Each Address input is identifed by the\n * `name` peramiter.\n *\n * There is also another bulma box that includes a checkbox for shipping address\n * when un checked a bool is set in the store `sameAsShipping` that then will display\n * a shipping address field when unchecked.\n *\n */\nconst BillingAddress = observer(() => {\n  const store = useContext(CheckoutStore)\n  const addressType = 'billingAddress'\n  return (\n    <div className=\"box\">\n      <h2>Billing Address</h2>\n      <hr style={{ marginTop: '5px' }} />\n      <label>\n        <input\n          type=\"checkbox\"\n          defaultChecked={store.sameAsShipping}\n          onClick={() => {\n            store.set('sameAsShipping', !store.sameAsShipping)\n          }}\n        />\n        &nbsp;Same as Shipping Address\n      </label>\n\n      {!store.sameAsShipping && (\n        <div>\n          <AddressInput\n            AddressObject={addressType}\n            name={'name'}\n            placeholder={'Name'}\n          />\n          <AddressInput\n            AddressObject={addressType}\n            name={'address1'}\n            placeholder={'Address'}\n          />\n          <AddressInput\n            AddressObject={addressType}\n            name={'address2'}\n            placeholder={'Address Line 2'}\n          />\n          <div className=\"columns\">\n            <div className=\"column is-5\">\n              <AddressInput\n                AddressObject={addressType}\n                name={'city'}\n                placeholder={'City'}\n              />\n            </div>\n            <div className=\"column is-4\">\n              <AddressInput\n                AddressObject={addressType}\n                name={'state'}\n                placeholder={'State'}\n              />\n            </div>\n            <div className=\"column is-3\">\n              <AddressInput\n                AddressObject={addressType}\n                name={'zipcode'}\n                placeholder={'Zipcode'}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n})\n\nexport default BillingAddress\n"],"sourceRoot":""}