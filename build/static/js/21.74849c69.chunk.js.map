{"version":3,"sources":["styles/NavBar.module.scss","components/NavBar.js","components/ContactForm.js"],"names":["module","exports","NavBarItem","props","style","minHeight","className","navItem","href","onClick","image","alt","src","width","maxHeight","text","NavBar","observer","store","useContext","AccountStore","useState","burgerActive","setBurgerActive","role","aria-label","maxWidth","margin","aria-expanded","position","zIndex","top","right","aria-hidden","textAlign","customerToken","event","preventDefault","clearSession","ContactUs","email","setEmail","message","setMessage","isSent","setSent","isValidEmail","setValidEmail","commonChange","msg","console","log","target","name","test","validateEmail","value","marginTop","onChange","e","type","placeholder","payload","first_name","last_name","subject","program","post","then","r","Object","keys","length","alert","postContact"],"mappings":"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","file":"static/js/21.74849c69.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navItem\":\"NavBar_navItem__3MGo_\"};","import React, { useContext, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport AccountStore from '../stores/AccountStore'\n\nimport { navItem } from '../styles/NavBar.module.scss'\nimport PropTypes from 'prop-types'\n/**\n * NavBarItem\n * Renders a navbar item from props\n * - props.image\n * - props.href\n * - props.text\n * - props.onClick\n */\nconst NavBarItem = props => (\n  <a\n    style={{\n      minHeight: '80px',\n    }}\n    className={'navbar-item ' + navItem}\n    href={props.href}\n    onClick={props.onClick}\n  >\n    {props.image && (\n      <img\n        alt=\"navigation\"\n        src={props.image}\n        style={{ width: 'auto', maxHeight: '53px' }}\n      />\n    )}\n    {props.text}\n  </a>\n)\n\nNavBarItem.propTypes = {\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n  image: PropTypes.string,\n  text: PropTypes.string,\n}\n\n/**\n * Navbar observes AccountStore\n * Renders each navbar item insidea bluma.io navbar\n * It also handles logic for logined in and logedout states\n *\n * Will colapse into a burger / logo when in mobile mode\n */\nexport const NavBar = observer(props => {\n  const store = useContext(AccountStore)\n\n  const [burgerActive, setBurgerActive] = useState(false)\n\n  const logOut = event => {\n    event.preventDefault()\n    store.clearSession()\n  }\n  ///https:///assets.bulubox.com/assets/bulugroup-logo.png\n  return (\n    <nav\n      className=\"navbar\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n      style={{ maxWidth: '1344px', margin: 'auto' }}\n    >\n      <div className=\"navbar-brand\">\n        <NavBarItem\n          image={'http://cdn.onlinewebfonts.com/svg/img_547.png'}\n          href=\"#\"\n        />\n      </div>\n\n      <button\n        className={'a11y navbar-burger ' + (burgerActive ? 'is-active' : '')}\n        aria-label=\"menu\"\n        aria-expanded=\"false\"\n        onClick={() => {\n          setBurgerActive(!burgerActive)\n        }}\n        style={{\n          position: 'absolute',\n          zIndex: 1001,\n          top: 0,\n          right: 0,\n        }}\n      >\n        <span aria-hidden=\"true\"></span>\n        <span aria-hidden=\"true\"></span>\n        <span aria-hidden=\"true\"></span>\n      </button>\n      <div\n        style={{\n          position: 'relative',\n          top: '-4px',\n          textAlign: 'center',\n        }}\n        className={'navbar-menu ' + (burgerActive ? 'is-active' : '')}\n      >\n        <div className=\"navbar-end\">\n          <NavBarItem text=\"Subscribe\" href=\"#/\" />\n          <NavBarItem text=\"FAQ\" href=\"#/faq\" />\n          {!store.customerToken && <NavBarItem text=\"Log In\" href=\"#/login\" />}\n          {store.customerToken && (\n            <NavBarItem text=\"Log Out\" onClick={logOut} />\n          )}\n          {store.customerToken && (\n            <NavBarItem text=\"My Account\" href=\"#/myaccount\" />\n          )}\n        </div>\n      </div>\n    </nav>\n  )\n})\n\nexport default NavBar\n","import React, { useContext, useState } from 'react'\nimport AccountStore from '../stores/AccountStore.js'\nimport { NavBar } from './NavBar'\nconst validateEmail = email => {\n  const regexp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  return regexp.test(email)\n}\n\nconst validateMsg = msg => {\n  console.log(msg)\n  if (msg !== null && msg !== '') {\n    return true\n  } else {\n    return false\n  }\n}\n\nexport const ContactUs = () => {\n  const store = useContext(AccountStore)\n  const [email, setEmail] = useState(null) // [state var, setter] = useState(initialState)\n  const [message, setMessage] = useState(null)\n  const [isSent, setSent] = useState(false)\n  const [isValidEmail, setValidEmail] = useState(false)\n\n  const postContact = store => {\n    const payload = {\n      email: email,\n      first_name: 'string',\n      last_name: 'string',\n      subject: 'string',\n      message: message,\n      program: 'GOLD STANDARD',\n    }\n\n    const url = 'https://gold.staging.bulubox.com/api/contact/'\n\n    if (email !== null) {\n      store.post(url, payload).then(r => {\n        if (Object.keys(r).length === 6) {\n          setSent(true)\n        }\n      })\n    } else {\n      alert('please enter a valid email')\n    }\n  }\n\n  const commonChange = event => {\n    console.log(event)\n    //this.setState({ [event.target.name]: event.target.value })\n\n    if (event.target.name === 'email') {\n      let isValidEmail = validateEmail(event.target.value)\n      if (isValidEmail) {\n        setValidEmail(true)\n        setEmail(event.target.value)\n        console.log(email)\n      } else {\n        setValidEmail(false)\n      }\n    }\n\n    if (event.target.name === 'message') {\n      let isValidMsg = validateMsg(event.target.value)\n      if (isValidMsg) {\n        setMessage(event.target.value)\n      }\n    }\n\n    //this.checkForInput()\n  }\n\n  if (!isSent) {\n    return (\n      <div className=\"container\" style={{ minHeight: '900px' }}>\n        <NavBar />\n        <div className=\"box\">\n          <h1 className=\"title\">Contact Us!</h1>\n          <div className=\"field\">\n            <label className=\"label\">Email</label>\n            <div className=\"control has-icons-left has-icons-right\">\n              <input\n                onChange={e => commonChange(e)}\n                className=\"input\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email input\"\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-envelope\"></i>\n              </span>\n              <span className=\"icon is-small is-right\">\n                <i className=\"fas fa-exclamation-triangle\"></i>\n              </span>\n            </div>\n            {!isValidEmail && (\n              <p className=\"help is-danger\">This email is invalid</p>\n            )}\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Message</label>\n            <div className=\"control\">\n              <textarea\n                onChange={e => commonChange(e)}\n                name=\"message\"\n                className=\"textarea\"\n                placeholder=\"Textarea\"\n              ></textarea>\n            </div>\n          </div>\n\n          <div className=\"field is-grouped is-grouped-right\">\n            <div className=\"control\">\n              <button\n                onClick={() => postContact(store)}\n                className=\"button is-link\"\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  if (isSent) {\n    return (\n      <div className=\"container\" style={{ minHeight: '900px' }}>\n        <NavBar />\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Your Message Has Been Sent.</h1>\n            <p>From: {email}</p>\n\n            <p style={{ marginTop: '2em' }}>{message}</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}