{"version":3,"sources":["styles/AccountInfo.module.scss","components/Account/EditShippinginfo.js"],"names":["module","exports","EditShipping","observer","props","store","useContext","AccountStore","useState","renderBilling","setRenderBillling","showForm","event","preventDefault","handleChange","set","target","id","value","style","fontWeight","className","marginBottom","poochInput","type","placeholder","onChange","height","states","map","state","abbreviation","key","name","Link","onClick","href","textAlign","a","updateSubscriptionAddress","sub"],"mappings":"oHACAA,EAAOC,QAAU,CAAC,kBAAoB,uCAAuC,qBAAuB,0CAA0C,wBAA0B,6CAA6C,KAAO,0BAA0B,WAAa,gCAAgC,YAAc,iCAAiC,oBAAsB,yCAAyC,cAAgB,qC,omFCYpZC,EAAeC,aAAS,SAAAC,GACnC,IAAMC,EAAQC,qBAAWC,KADmB,EAEDC,oBAAS,GAFR,mBAErCC,EAFqC,KAEtBC,EAFsB,KAGtCC,EAAW,SAAAC,GACfA,EAAMC,iBACNH,GAAmBD,IAGfK,EAAe,SAAAF,GACnBP,EAAMU,IAAIH,EAAMI,OAAOC,GAAIL,EAAMI,OAAOE,QAG1C,OAAKT,EAUD,yBAAKU,MAAO,CAAEC,WAAY,MACxB,yBAAKC,UAAU,aAAaF,MAAO,CAAEG,aAAc,UACjD,yBAAKD,UAAU,SACb,uBAAGA,UAAU,WACX,6CACA,2BACEA,UAAW,SAAWE,aACtBC,KAAK,OACLP,GAAG,YACHQ,YAAY,aACZC,SAAUZ,MAIhB,yBAAKO,UAAU,SACb,uBAAGA,UAAU,WACX,4CACA,2BACEA,UAAW,SAAWE,aACtBC,KAAK,OACLP,GAAG,WACHQ,YAAY,YACZC,SAAUZ,OAKlB,yBAAKO,UAAU,SACb,uBAAGA,UAAU,WACX,4CACA,2BACEA,UAAW,SAAWE,aACtBC,KAAK,OACLP,GAAG,WACHQ,YAAY,YACZC,SAAUZ,MAIhB,yBAAKO,UAAU,SACb,4CACA,uBAAGA,UAAU,WACX,2BACEA,UAAW,SAAWE,aACtBC,KAAK,OACLP,GAAG,WACHQ,YAAY,YACZC,SAAUZ,MAIhB,yBAAKO,UAAU,cACb,yBAAKA,UAAU,SACb,uBAAGA,UAAU,WACX,wCACA,4BACEA,UAAWE,aACXN,GAAG,QACHQ,YAAY,QACZC,SAAUZ,EACVK,MAAO,CAAEQ,OAAQ,SAEhBC,EAAOC,KAAI,SAAAC,GAAK,OACf,4BAAQZ,MAAOY,EAAMC,aAAcC,IAAKF,EAAMC,cAC3CD,EAAMG,YAMjB,yBAAKZ,UAAU,SACb,uCACA,uBAAGA,UAAU,WACX,2BACEA,UAAW,SAAWE,aACtBC,KAAK,OACLP,GAAG,OACHQ,YAAY,OACZC,SAAUZ,OAKlB,yBAAKO,UAAU,SACb,uBAAGA,UAAU,WACX,sCACA,2BACEA,UAAW,SAAWE,aACtBC,KAAK,MACLP,GAAG,MACHQ,YAAY,MACZC,SAAUZ,MAIhB,yBAAKO,UAAU,oBACb,uBAAGA,UAAU,uBACX,4BAAQA,UAAWa,OAAMC,QAASxB,EAAUyB,KAAK,IAAjD,WAIF,uBAAGf,UAAU,UAAUF,MAAO,CAAEkB,UAAW,UACzC,4BACEhB,UAAU,oBACVG,KAAK,SACLW,QAAO,sBAAE,sBAAAG,EAAA,sEACDjC,EAAMkC,0BAA0BnC,EAAMoC,KADrC,OAEP9B,GAAmBD,GAFZ,4CAHX,8BA9GN,6BACE,4BAAQY,UAAW,QAAUa,OAAMC,QAASxB,GAA5C","file":"static/js/20.fa8dc286.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"accountPageHeader\":\"AccountInfo_accountPageHeader__3PT-I\",\"accountSectionHeader\":\"AccountInfo_accountSectionHeader__u8Du1\",\"accountSubSectionHeader\":\"AccountInfo_accountSubSectionHeader__rUWSb\",\"Link\":\"AccountInfo_Link__1OAI7\",\"poochInput\":\"AccountInfo_poochInput__1AR4z\",\"poochButton\":\"AccountInfo_poochButton__3soeJ\",\"stripeElementsInput\":\"AccountInfo_stripeElementsInput__21gKf\",\"StripeElement\":\"AccountInfo_StripeElement__1q-TZ\"};","import React, { useContext, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport AccountStore from '../../stores/AccountStore'\nimport states from '../../states.json'\nimport { Link, poochInput } from '../../styles/AccountInfo.module.scss'\n\n/**\n * EditShipping Observes AccountStore\n * Updates the Subscription's Shipping address.\n * Displays a <Notify/> notification when updated.\n *\n */\n\nexport const EditShipping = observer(props => {\n  const store = useContext(AccountStore)\n  const [renderBilling, setRenderBillling] = useState(false)\n  const showForm = event => {\n    event.preventDefault()\n    setRenderBillling(!renderBilling)\n  }\n\n  const handleChange = event => {\n    store.set(event.target.id, event.target.value)\n  }\n\n  if (!renderBilling) {\n    return (\n      <div>\n        <button className={'a11y ' + Link} onClick={showForm}>\n          Edit Shipping Address\n        </button>\n      </div>\n    )\n  } else {\n    return (\n      <div style={{ fontWeight: 400 }}>\n        <div className=\"field-body\" style={{ marginBottom: '.5rem' }}>\n          <div className=\"field\">\n            <p className=\"control\">\n              <lable>First Name</lable>\n              <input\n                className={'input ' + poochInput}\n                type=\"text\"\n                id=\"firstName\"\n                placeholder=\"First Name\"\n                onChange={handleChange}\n              />\n            </p>\n          </div>\n          <div className=\"field\">\n            <p className=\"control\">\n              <lable>Last Name</lable>\n              <input\n                className={'input ' + poochInput}\n                type=\"text\"\n                id=\"lastName\"\n                placeholder=\"Last Name\"\n                onChange={handleChange}\n              />\n            </p>\n          </div>\n        </div>\n        <div className=\"field\">\n          <p className=\"control\">\n            <lable>Address 1</lable>\n            <input\n              className={'input ' + poochInput}\n              type=\"text\"\n              id=\"address1\"\n              placeholder=\"Address 1\"\n              onChange={handleChange}\n            />\n          </p>\n        </div>\n        <div className=\"field\">\n          <lable>Address 2</lable>\n          <p className=\"control\">\n            <input\n              className={'input ' + poochInput}\n              type=\"text\"\n              id=\"address2\"\n              placeholder=\"Address 2\"\n              onChange={handleChange}\n            />\n          </p>\n        </div>\n        <div className=\"field-body\">\n          <div className=\"field\">\n            <p className=\"control\">\n              <lable>State</lable>\n              <select\n                className={poochInput}\n                id=\"state\"\n                placeholder=\"State\"\n                onChange={handleChange}\n                style={{ height: '54px' }}\n              >\n                {states.map(state => (\n                  <option value={state.abbreviation} key={state.abbreviation}>\n                    {state.name}\n                  </option>\n                ))}\n              </select>\n            </p>\n          </div>\n          <div className=\"field\">\n            <lable>City</lable>\n            <p className=\"control\">\n              <input\n                className={'input ' + poochInput}\n                type=\"text\"\n                id=\"city\"\n                placeholder=\"City\"\n                onChange={handleChange}\n              />\n            </p>\n          </div>\n        </div>\n        <div className=\"field\">\n          <p className=\"control\">\n            <lable>Zip</lable>\n            <input\n              className={'input ' + poochInput}\n              type=\"zip\"\n              id=\"zip\"\n              placeholder=\"Zip\"\n              onChange={handleChange}\n            />\n          </p>\n        </div>\n        <div className=\"field is-grouped\">\n          <p className=\"control is-expanded\">\n            <button className={Link} onClick={showForm} href=\"\">\n              Cancel\n            </button>\n          </p>\n          <p className=\"control\" style={{ textAlign: 'right' }}>\n            <button\n              className=\"button btn-orange\"\n              type=\"submit\"\n              onClick={async () => {\n                await store.updateSubscriptionAddress(props.sub)\n                setRenderBillling(!renderBilling)\n              }}\n            >\n              Update Shipping Address\n            </button>\n          </p>\n        </div>\n      </div>\n    )\n  }\n})\n"],"sourceRoot":""}