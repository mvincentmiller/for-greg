{"version":3,"sources":["styles/NavBar.module.scss","components/NavBar.js","components/Landing/LandingHeader.js"],"names":["module","exports","NavBarItem","props","style","minHeight","className","navItem","href","onClick","image","alt","src","width","maxHeight","text","NavBar","observer","store","useContext","AccountStore","useState","burgerActive","setBurgerActive","role","aria-label","maxWidth","margin","aria-expanded","position","zIndex","top","right","aria-hidden","textAlign","customerToken","event","preventDefault","clearSession","LandingHeader","backgroundImage","backgroundRepeat","backgroundSize"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,QAAU,0B,mICatBC,EAAa,SAAAC,GAAK,OACtB,uBACEC,MAAO,CACLC,UAAW,QAEbC,UAAW,eAAiBC,UAC5BC,KAAML,EAAMK,KACZC,QAASN,EAAMM,SAEdN,EAAMO,OACL,yBACEC,IAAI,aACJC,IAAKT,EAAMO,MACXN,MAAO,CAAES,MAAO,OAAQC,UAAW,UAGtCX,EAAMY,OAkBEC,EAASC,aAAS,SAAAd,GAC7B,IAAMe,EAAQC,qBAAWC,KADa,EAGEC,oBAAS,GAHX,mBAG/BC,EAH+B,KAGjBC,EAHiB,KAUtC,OACE,yBACEjB,UAAU,SACVkB,KAAK,aACLC,aAAW,kBACXrB,MAAO,CAAEsB,SAAU,SAAUC,OAAQ,SAErC,yBAAKrB,UAAU,gBACb,kBAACJ,EAAD,CACEQ,MAAO,gDACPF,KAAK,OAIT,4BACEF,UAAW,uBAAyBgB,EAAe,YAAc,IACjEG,aAAW,OACXG,gBAAc,QACdnB,QAAS,WACPc,GAAiBD,IAEnBlB,MAAO,CACLyB,SAAU,WACVC,OAAQ,KACRC,IAAK,EACLC,MAAO,IAGT,0BAAMC,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,UAEpB,yBACE7B,MAAO,CACLyB,SAAU,WACVE,IAAK,OACLG,UAAW,UAEb5B,UAAW,gBAAkBgB,EAAe,YAAc,KAE1D,yBAAKhB,UAAU,cACb,kBAACJ,EAAD,CAAYa,KAAK,YAAYP,KAAK,OAClC,kBAACN,EAAD,CAAYa,KAAK,MAAMP,KAAK,WAC1BU,EAAMiB,eAAiB,kBAACjC,EAAD,CAAYa,KAAK,SAASP,KAAK,YACvDU,EAAMiB,eACL,kBAACjC,EAAD,CAAYa,KAAK,UAAUN,QAlDtB,SAAA2B,GACbA,EAAMC,iBACNnB,EAAMoB,kBAkDCpB,EAAMiB,eACL,kBAACjC,EAAD,CAAYa,KAAK,aAAaP,KAAK,sBAQhCQ,a,2EClHf,8CAgBA,IAoCauB,EAAgBtB,aAAS,SAAAd,GAAK,OACzC,yBACEG,UAAU,gBACVF,MAAO,CACLC,UAAW,OACXmC,gBAAiB,yBACjBC,iBAAkB,YAClBC,eAAgB,SAQlB,yBAAKpC,UAAU,UACb,kBAACU,EAAA,OAAD","file":"static/js/23.22c4e7b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navItem\":\"NavBar_navItem__3MGo_\"};","import React, { useContext, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport AccountStore from '../stores/AccountStore'\n\nimport { navItem } from '../styles/NavBar.module.scss'\nimport PropTypes from 'prop-types'\n/**\n * NavBarItem\n * Renders a navbar item from props\n * - props.image\n * - props.href\n * - props.text\n * - props.onClick\n */\nconst NavBarItem = props => (\n  <a\n    style={{\n      minHeight: '80px',\n    }}\n    className={'navbar-item ' + navItem}\n    href={props.href}\n    onClick={props.onClick}\n  >\n    {props.image && (\n      <img\n        alt=\"navigation\"\n        src={props.image}\n        style={{ width: 'auto', maxHeight: '53px' }}\n      />\n    )}\n    {props.text}\n  </a>\n)\n\nNavBarItem.propTypes = {\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n  image: PropTypes.string,\n  text: PropTypes.string,\n}\n\n/**\n * Navbar observes AccountStore\n * Renders each navbar item insidea bluma.io navbar\n * It also handles logic for logined in and logedout states\n *\n * Will colapse into a burger / logo when in mobile mode\n */\nexport const NavBar = observer(props => {\n  const store = useContext(AccountStore)\n\n  const [burgerActive, setBurgerActive] = useState(false)\n\n  const logOut = event => {\n    event.preventDefault()\n    store.clearSession()\n  }\n  ///https:///assets.bulubox.com/assets/bulugroup-logo.png\n  return (\n    <nav\n      className=\"navbar\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n      style={{ maxWidth: '1344px', margin: 'auto' }}\n    >\n      <div className=\"navbar-brand\">\n        <NavBarItem\n          image={'http://cdn.onlinewebfonts.com/svg/img_547.png'}\n          href=\"#\"\n        />\n      </div>\n\n      <button\n        className={'a11y navbar-burger ' + (burgerActive ? 'is-active' : '')}\n        aria-label=\"menu\"\n        aria-expanded=\"false\"\n        onClick={() => {\n          setBurgerActive(!burgerActive)\n        }}\n        style={{\n          position: 'absolute',\n          zIndex: 1001,\n          top: 0,\n          right: 0,\n        }}\n      >\n        <span aria-hidden=\"true\"></span>\n        <span aria-hidden=\"true\"></span>\n        <span aria-hidden=\"true\"></span>\n      </button>\n      <div\n        style={{\n          position: 'relative',\n          top: '-4px',\n          textAlign: 'center',\n        }}\n        className={'navbar-menu ' + (burgerActive ? 'is-active' : '')}\n      >\n        <div className=\"navbar-end\">\n          <NavBarItem text=\"Subscribe\" href=\"#/\" />\n          <NavBarItem text=\"FAQ\" href=\"#/faq\" />\n          {!store.customerToken && <NavBarItem text=\"Log In\" href=\"#/login\" />}\n          {store.customerToken && (\n            <NavBarItem text=\"Log Out\" onClick={logOut} />\n          )}\n          {store.customerToken && (\n            <NavBarItem text=\"My Account\" href=\"#/myaccount\" />\n          )}\n        </div>\n      </div>\n    </nav>\n  )\n})\n\nexport default NavBar\n","/* eslint jsx-a11y/anchor-is-valid: 0 */\n\nimport React from 'react'\nimport { observer } from 'mobx-react'\n\nimport { NavBar } from '../NavBar'\n\nimport PropTypes from 'prop-types'\nimport { copy } from '../../stores/copy.js'\n\n/**\n * LandingCallout\n *\n * Contains the text for landing header, passed in via props.\n */\n\nconst LandingCallout = props => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: '8em',\n        zIndex: '1',\n        textAlign: 'center',\n        backgroundColor: '#171717',\n        padding: '2em',\n        width: '60%',\n      }}\n    >\n      <div className=\"callout\">\n        <h1>{props.title}</h1>\n        <h3 className=\"welcome-message\">{copy.landingMessage}</h3>\n        <button\n          className=\"button is-primary\"\n          onClick={() => (window.location.hash = '/subscribe/one')}\n        >\n          3 EASY STEPS\n        </button>\n      </div>\n    </div>\n  )\n}\nLandingCallout.propTypes = {\n  title: PropTypes.string,\n}\n/**\n * LandingHeader\n *\n * This is the header and nav for the landing- it may hold an image carousel or a video player, etc.\n *\n */\n\nexport const LandingHeader = observer(props => (\n  <div\n    className=\"landingHeader\"\n    style={{\n      minHeight: '65vh',\n      backgroundImage: 'url(\"boxesbanner.svg\")',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: '100%',\n    }}\n  >\n    {/* \n    <LandingCallout title={props.title} />\n    <VideoBanner />\n\n  */}\n    <div className=\"navtop\">\n      <NavBar />\n    </div>\n  </div>\n))\n"],"sourceRoot":""}