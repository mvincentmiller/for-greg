{"version":3,"sources":["components/Checkout/AddressInput.js"],"names":["AddressInput","observer","props","store","useContext","CheckoutStore","className","type","id","name","placeholder","defaultValue","AddressObject","onBlur","event","set","target","value","updateAddress"],"mappings":"gIAAA,wFAWaA,EAAeC,aAAS,SAAAC,GACnC,IAAMC,EAAQC,qBAAWC,KACzB,OACE,yBAAKC,UAAU,SACb,2BACEA,UAAU,QACVC,KAAK,OACLC,GAAIN,EAAMO,KACVC,YAAaR,EAAMQ,YACnBC,aACER,EAAMD,EAAMU,gBAAkBT,EAAMD,EAAMU,eAAeV,EAAMO,MAEjEI,OAAQ,SAAAC,GACNX,EAAMD,EAAMU,eAAeG,IAAIb,EAAMO,KAAMK,EAAME,OAAOC,OACxDd,EAAMe","file":"static/js/51.3ec80f56.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\n\nimport CheckoutStore from '../../stores/CheckoutStore'\n/**\n * AddressInput observes the CheckoutStore\n *\n * AddressInput takes user input and then updates the billing address first\n * on the store then it runs the funciton `store.updateAddress()` that then\n * calls a mutation on the server.\n */\nexport const AddressInput = observer(props => {\n  const store = useContext(CheckoutStore)\n  return (\n    <div className=\"field\">\n      <input\n        className=\"input\"\n        type=\"text\"\n        id={props.name}\n        placeholder={props.placeholder}\n        defaultValue={\n          store[props.AddressObject] && store[props.AddressObject][props.name]\n        }\n        onBlur={event => {\n          store[props.AddressObject].set(props.name, event.target.value)\n          store.updateAddress()\n        }}\n      />\n    </div>\n  )\n})\n"],"sourceRoot":""}