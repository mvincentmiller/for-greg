{"version":3,"sources":["components/SubscribeFlow/ProgressBar.js","components/SubscribeFlow/SubscribeHeader.js","components/General/Modal.js","components/SubscribeFlow/Variants.js","components/SubscribeFlow/VariantPicker.js","components/SubscribeFlow/One.js"],"names":["ProgressBar","observer","props","uiStore","useContext","UiStore","class","value","progress","max","SubscribeHeader","style","margin","marginTop","marginBottom","width","textAlign","background","onClick","window","location","hash","alt","src","maxHeight","Modal","useState","active","setActive","toggleModal","scrollTo","Inner","inner","className","title","maxWidth","height","aria-label","position","top","right","Variants","store","ThingStore","sv","toJS","variants","handleSelect","e","t","v","preventDefault","set","padding","color","paddingLeft","Object","keys","map","key","id","variantSelected","variantTitle","name","image","price","productTitle","VariantPicker","handleChange","event","target","action","onChange","type","htmlFor","One"],"mappings":"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","file":"static/js/13.0be5866d.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\nimport UiStore from '../../stores/UiStore.js'\n\n/**\n * ProgressBar observes the UiStore\n * This progress bar (based on Bulma classes) displays the place in the subscribe flow.\n * Reads progress value from the Ui Store.\n */\n\nexport const ProgressBar = observer(props => {\n  const uiStore = useContext(UiStore)\n\n  return (\n    <progress class=\"progress is-small\" value={uiStore.progress} max=\"100\">\n      {props.value}%\n    </progress>\n  )\n})\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { ProgressBar } from './ProgressBar'\n\n/**\n * SubscribeHeader holds the progress bar.\n * TODO: Should update ProgressBar baised on route or something.\n */\n\nexport const SubscribeHeader = observer(props => {\n  return (\n    <div>\n      <div\n        style={{\n          margin: '0 auto',\n          marginTop: '2em',\n          marginBottom: '2em',\n          width: '150px',\n          textAlign: 'center',\n          background: '#fcfcfc',\n        }}\n      >\n        <img\n          onClick={() => (window.location.hash = '/')}\n          alt=\"logo\"\n          src=\"https://s3.amazonaws.com/assets.bulubox.com/assets/bulugroup-logo.png\"\n          style={{ width: '50px', margin: '0 auto', maxHeight: '53px' }}\n        />\n      </div>\n      <ProgressBar progress=\"10\" />\n    </div>\n  )\n})\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\n\n/**\n *\n * This is a modal using Bulma.\n */\nexport const Modal = props => {\n  const [active, setActive] = useState(false)\n\n  const toggleModal = props => {\n    window.scrollTo(0, '#root')\n    setActive(!active)\n  }\n\n  const Inner = props.inner\n\n  return (\n    <span>\n      <button className=\"button\" onClick={toggleModal}>\n        {props.title}\n      </button>\n      <div className={'modal ' + (active ? 'is-active' : '')}>\n        <div className=\"modal-background\" onClick={toggleModal}></div>\n        <div\n          className=\"modal-content\"\n          style={{\n            width: '800px',\n            maxWidth: '100%',\n            height: 'auto',\n            maxHeight: '100%',\n          }}\n        >\n          <Inner style={{ marginTop: '3em' }} />\n          <button\n            className=\"modal-close is-large\"\n            aria-label=\"close\"\n            onClick={toggleModal}\n            style={{ position: 'absolute', top: '10px', right: '10px' }}\n          ></button>\n        </div>\n      </div>\n    </span>\n  )\n}\n\nexport default observer(Modal)\n","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\nimport { toJS } from 'mobx'\nimport ThingStore from '../../stores/ThingStore.js'\n\n/**\n * Variants observes ThingStore\n *\n * The store contains a list of select vairants that are renderd baised on\n * the choices a user selects.\n *\n * Then the selected vairant is set in the store.\n *\n */\nexport const Variants = observer(() => {\n  const store = useContext(ThingStore)\n\n  let sv = toJS(store.variants)\n\n  const handleSelect = (e, t, v) => {\n    e.preventDefault()\n    store.set('variantSelected', t)\n    store.set('variant', v)\n  }\n\n  return (\n    <div style={{ padding: '1em' }}>\n      <div\n        className=\"columns is-multiline\"\n        style={{ background: '#f1f1f1', color: '#fcfcfc', paddingLeft: '2em' }}\n      >\n        {sv &&\n          Object.keys(sv).map(key => {\n            return (\n              <div>\n                {sv[key].id === store.variantSelected &&\n                  sv[key].variantTitle === store.variantTitle && (\n                    <div\n                      className=\"column\"\n                      style={{ background: '#17171c', color: '#fcfcfc' }}\n                    >\n                      <div\n                        style={{ padding: '1em' }}\n                        name={sv[key].id}\n                        onClick={e => handleSelect(e, sv[key].id, sv[key])}\n                      >\n                        <div style={{ padding: '2em' }}>\n                          <img\n                            alt=\"variant\"\n                            style={{\n                              width: '60px',\n                              height: '60px',\n                              margin: '0 auto',\n                              marginBottom: '2em',\n                            }}\n                            src={sv[key].image}\n                          />\n                          <p>\n                            Lorem ipsum dolor sit amet, consectetur adipiscing\n                            elit, sed do eiusmod tempor incididunt ut labore et\n                            dolore magna aliqua. Ut enim ad minim veniam, quis\n                            nostrud exercitation ullamco laboris nisi ut aliquip\n                            ex ea commodo consequat. Duis aute irure dolor in\n                            reprehenderit in voluptate velit esse cillum dolore\n                            eu fugiat nulla pariatur. Excepteur sint occaecat\n                            cupidatat non proident, sunt in culpa qui officia\n                            deserunt mollit anim id est laborum.\n                          </p>\n                          <h1>${sv[key].price}</h1>\n                          <p>\n                            {sv[key].productTitle} <br /> ({' '}\n                            {sv[key].variantTitle} )\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n\n                {sv[key].id !== store.variantSelected &&\n                  sv[key].variantTitle === store.variantTitle && (\n                    <div\n                      className=\"column\"\n                      style={{ background: '#fcfcfc', color: '#171717' }}\n                    >\n                      <div\n                        style={{ padding: '1em' }}\n                        name={sv[key].id}\n                        onClick={e => handleSelect(e, sv[key].id, sv[key])}\n                      >\n                        <div style={{ padding: '2em' }}>\n                          <img\n                            alt=\"variant\"\n                            style={{\n                              width: '60px',\n                              height: '60px',\n                              margin: '0 auto',\n                              marginBottom: '2em',\n                            }}\n                            src={sv[key].image}\n                          />\n\n                          <p>\n                            Lorem ipsum dolor sit amet, consectetur adipiscing\n                            elit, sed do eiusmod tempor incididunt ut labore et\n                            dolore magna aliqua. Ut enim ad minim veniam, quis\n                            nostrud exercitation ullamco laboris nisi ut aliquip\n                            ex ea commodo consequat. Duis aute irure dolor in\n                            reprehenderit in voluptate velit esse cillum dolore\n                            eu fugiat nulla pariatur. Excepteur sint occaecat\n                            cupidatat non proident, sunt in culpa qui officia\n                            deserunt mollit anim id est laborum.\n                          </p>\n\n                          <h1>${sv[key].price}</h1>\n                          <p>\n                            {sv[key].productTitle} <br />({' '}\n                            {sv[key].variantTitle} )\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n              </div>\n            )\n          })}\n      </div>\n    </div>\n  )\n})\n","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\n\nimport ThingStore from '../../stores/ThingStore.js'\n\n/**\n * VariantPicker observes ThingStore\n *\n * Changes the variant metadatan (size) and sends that to the ThingStore.\n */\nexport const VariantPicker = observer(() => {\n  const store = useContext(ThingStore)\n\n  const handleChange = event => {\n    store.set('variantTitle', event.target.value)\n  }\n\n  return (\n    <div\n      style={{\n        maxWidth: '90%',\n        margin: '0 auto',\n        textAlign: 'left',\n        padding: '1em',\n      }}\n    >\n      <div class=\"columns\">\n        <div className=\"column\">\n          <form action=\"#\">\n            <p> Small</p>\n            <input\n              onChange={handleChange}\n              value=\"S\"\n              type=\"radio\"\n              id=\"test1\"\n              name=\"radio-group\"\n            />\n            <label htmlFor=\"test1\">S</label>\n            <hr />\n            <p> Medium </p>\n            <input\n              onChange={handleChange}\n              value=\"M\"\n              type=\"radio\"\n              id=\"test2\"\n              name=\"radio-group\"\n            />\n            <label htmlFor=\"test2\">M</label>\n            <hr />\n            <p> Large </p>\n            <input\n              onChange={handleChange}\n              value=\"L\"\n              type=\"radio\"\n              id=\"test3\"\n              name=\"radio-group\"\n            />\n            <label htmlFor=\"test3\">L</label>\n            <hr />\n          </form>\n        </div>\n\n        <div className=\"column\">\n          <img\n            alt=\"alt\"\n            src=\"https://i.stack.imgur.com/yZlqh.png\"\n            style={{ maxWidth: '350px' }}\n          />\n        </div>\n      </div>\n    </div>\n  )\n})\n","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\nimport { SubscribeHeader } from './SubscribeHeader.js'\nimport { Variants } from './Variants.js'\nimport { VariantPicker } from './VariantPicker.js'\nimport { Modal } from '../General/Modal.js'\nimport UiStore from '../../stores/UiStore.js'\n\n/**\n * This is the first step in the subscribe flow.\n * Contains\n *  - SubscribeHeader\n *  - Modal\n *  - Variants\n *\n */\n\nexport const One = observer(props => {\n  const uiStore = useContext(UiStore)\n\n  const next = () => {\n    uiStore.set('progress', 60)\n    window.location.hash = '/subscribe/two'\n  }\n\n  return (\n    <div className=\"subscribe\">\n      <SubscribeHeader />\n\n      <div className=\"subscribeInner\">\n        <h1 className=\"title is-2\">Select a plan.</h1>\n        <Modal inner={VariantPicker} />\n        <div style={{ marginTop: '1em' }}>\n          <Variants />\n        </div>\n\n        <button\n          style={{ marginTop: '2em', marginBottom: '2em' }}\n          onClick={next}\n          className=\"button is-primary\"\n        >\n          NEXT\n        </button>\n        <br />\n      </div>\n    </div>\n  )\n})\n"],"sourceRoot":""}