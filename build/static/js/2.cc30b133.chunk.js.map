{"version":3,"sources":["styles/AccountInfo.module.scss","styles/NavBar.module.scss","styles/Footer.module.scss","styles/Subscription.module.scss","styles/AccountHeader.module.scss","styles/AccountNav.module.scss","styles/OrderList.module.scss","styles/MyAccount.module.scss","components/NavBar.js","components/Footer.js","components/Account/EditPassword.js","components/Account/EditName.js","components/Account/EditEmail.js","components/Account/EditCard.js","components/Account/EditBillingInfomration.js","components/Account/Discount.js","components/Account/EditShippinginfo.js","components/Account/CancelSubscription.js","components/Account/SkipSubscription.js","components/Account/OrderRow.js","components/Account/OrderMobile.js","components/Account/AccountInformation.js","components/Account/BillingInformation.js","components/Account/AccountHeader.js","components/Account/AccountNav.js","components/Account/OrderList.js","components/Account/AccountInfo.js","components/Account/Notify.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Account/Subscriptions.js","components/Account/AccountContainer.js"],"names":["module","exports","NavBarItem","props","style","minHeight","className","navItem","href","onClick","image","alt","src","width","maxHeight","text","NavBar","observer","store","useContext","AccountStore","useState","burgerActive","setBurgerActive","role","aria-label","maxWidth","margin","aria-expanded","position","zIndex","top","right","aria-hidden","textAlign","customerToken","event","preventDefault","clearSession","Footer","footer","footerHeader","rel","target","EditPassword","newPassword","setNewPassword","passwordConfirm","setPasswordConfirm","renderForm","setRenderForm","handleChange","id","value","handleSubmit","a","setPassword","poochInput","type","placeholder","onChange","disabled","length","EditName","set","EditEmail","CardForm","injectStripe","onSubmit","stripe","createToken","then","payload","updatePaymentBilling","toJS","renderCardForm","console","log","stripeElementsInput","fontSize","base","color","backgroundColor","fontWeight","letterSpacing","fontFamily","invalid","Link","EditCard","apiKey","REACT_APP_STRIPE_KEY","fonts","cssSrc","customer","billingInfo","name","cardBrand","cardLast4","cardExpMonth","cardExpYear","EditBilling","renderBilling","setRenderBillling","showForm","updateBilling","marginBottom","height","states","map","state","abbreviation","key","accountSubSectionHeader","address1","address2","city","zipcode","Discount","render","setRender","showhide","AddDiscount","addDiscount","s","discountCode","EditShipping","updateSubscriptionAddress","sub","CancelSubscription","active","setActive","toggleModal","window","location","cancelSubscription","data","Skip","skipBox","nextChargeDate","OrderRow","padding","box","orderNumber","moment","orderDate","format","shippingDate","trackingNumber","trackingStatus","trackingLink","trackingnumber","OrderMobile","AccountInformation","setShowForm","handleForm","updateUser","background","accountSectionHeader","email","addr","e","newEmail","test","n","firstName","lastName","validateForm","BillingInformation","AccountHeader","customerName","split","AccountHeaderStyle","underline","AccountNav","handleClick","accountNav","accountNavList","accountNavItem","navLink","accountTab","OrderList","orderTable","shipments","o","order","boxes","AccountInfo","Notify","toast","display","notificationContainer","slideLeft","showHideNotification","message","_toConsumableArray","arr","Array","isArray","i","arr2","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","green","red","Subscriptions","subs","subscriptions","subscriptionContainer","values","boxImage","variants","get","sku","subscriptionHeader","productTitle","subscriptionDetails","title","slice","status","nextCharge","address","AccountContainer","container","accountContainer","class","columnRight","pageHeader"],"mappings":"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","file":"static/js/2.cc30b133.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"accountPageHeader\":\"AccountInfo_accountPageHeader__3PT-I\",\"accountSectionHeader\":\"AccountInfo_accountSectionHeader__u8Du1\",\"accountSubSectionHeader\":\"AccountInfo_accountSubSectionHeader__rUWSb\",\"Link\":\"AccountInfo_Link__1OAI7\",\"poochInput\":\"AccountInfo_poochInput__1AR4z\",\"poochButton\":\"AccountInfo_poochButton__3soeJ\",\"stripeElementsInput\":\"AccountInfo_stripeElementsInput__21gKf\",\"StripeElement\":\"AccountInfo_StripeElement__1q-TZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navItem\":\"NavBar_navItem__3MGo_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2SqrG\",\"footerHeader\":\"Footer_footerHeader__LsmQ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subscriptionHeader\":\"Subscription_subscriptionHeader__1kFyj\",\"pageHeader\":\"Subscription_pageHeader__1Ww1L\",\"subscriptionDetails\":\"Subscription_subscriptionDetails__zh0l3\",\"accountLink\":\"Subscription_accountLink__pIXgC\",\"boxImage\":\"Subscription_boxImage__NqWeH\",\"subscriptionContainer\":\"Subscription_subscriptionContainer__-Y1Jd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AccountHeaderStyle\":\"AccountHeader_AccountHeaderStyle__ewTnS\",\"underline\":\"AccountHeader_underline__1jF6Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"accountNavItem\":\"AccountNav_accountNavItem__2Hfbr\",\"navLink\":\"AccountNav_navLink__2_gzc\",\"active\":\"AccountNav_active__l4-GM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myOrders\":\"OrderList_myOrders__1Nm_6\",\"orderTable\":\"OrderList_orderTable__1vd78\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MyAccount_container__H6ruq\",\"columnRight\":\"MyAccount_columnRight__ZHKT_\",\"accountContainer\":\"MyAccount_accountContainer__21cGh\"};","import React, { useContext, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport AccountStore from '../stores/AccountStore'\n\nimport { navItem } from '../styles/NavBar.module.scss'\nimport PropTypes from 'prop-types'\n/**\n * NavBarItem\n * Renders a navbar item from props\n * - props.image\n * - props.href\n * - props.text\n * - props.onClick\n */\nconst NavBarItem = props => (\n  <a\n    style={{\n      minHeight: '80px',\n    }}\n    className={'navbar-item ' + navItem}\n    href={props.href}\n    onClick={props.onClick}\n  >\n    {props.image && (\n      <img\n        alt=\"navigation\"\n        src={props.image}\n        style={{ width: 'auto', maxHeight: '53px' }}\n      />\n    )}\n    {props.text}\n  </a>\n)\n\nNavBarItem.propTypes = {\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n  image: PropTypes.string,\n  text: PropTypes.string,\n}\n\n/**\n * Navbar observes AccountStore\n * Renders each navbar item insidea bluma.io navbar\n * It also handles logic for logined in and logedout states\n *\n * Will colapse into a burger / logo when in mobile mode\n */\nexport const NavBar = observer(props => {\n  const store = useContext(AccountStore)\n\n  const [burgerActive, setBurgerActive] = useState(false)\n\n  const logOut = event => {\n    event.preventDefault()\n    store.clearSession()\n  }\n  ///https:///assets.bulubox.com/assets/bulugroup-logo.png\n  return (\n    <nav\n      className=\"navbar\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n      style={{ maxWidth: '1344px', margin: 'auto' }}\n    >\n      <div className=\"navbar-brand\">\n        <NavBarItem\n          image={'http://cdn.onlinewebfonts.com/svg/img_547.png'}\n          href=\"#\"\n        />\n      </div>\n\n      <button\n        className={'a11y navbar-burger ' + (burgerActive ? 'is-active' : '')}\n        aria-label=\"menu\"\n        aria-expanded=\"false\"\n        onClick={() => {\n          setBurgerActive(!burgerActive)\n        }}\n        style={{\n          position: 'absolute',\n          zIndex: 1001,\n          top: 0,\n          right: 0,\n        }}\n      >\n        <span aria-hidden=\"true\"></span>\n        <span aria-hidden=\"true\"></span>\n        <span aria-hidden=\"true\"></span>\n      </button>\n      <div\n        style={{\n          position: 'relative',\n          top: '-4px',\n          textAlign: 'center',\n        }}\n        className={'navbar-menu ' + (burgerActive ? 'is-active' : '')}\n      >\n        <div className=\"navbar-end\">\n          <NavBarItem text=\"Subscribe\" href=\"#/\" />\n          <NavBarItem text=\"FAQ\" href=\"#/faq\" />\n          {!store.customerToken && <NavBarItem text=\"Log In\" href=\"#/login\" />}\n          {store.customerToken && (\n            <NavBarItem text=\"Log Out\" onClick={logOut} />\n          )}\n          {store.customerToken && (\n            <NavBarItem text=\"My Account\" href=\"#/myaccount\" />\n          )}\n        </div>\n      </div>\n    </nav>\n  )\n})\n\nexport default NavBar\n","import React from 'react'\nimport { observer } from 'mobx-react'\n\nimport { footer, footerHeader } from '../styles/Footer.module.scss'\n\n/**\n * Footer\n *\n * Renders the footer markup in plain markup useing bluma.\n */\n\nexport const Footer = observer(props => (\n  <div className={footer}>\n    <div className=\"container\">\n      <div className=\"columns\">\n        <div className=\"column is-3\">\n          <p className={footerHeader}>Bulu Inc.</p>\n          <ul>\n            <li>\n              <a\n                href=\"https://bulubox.com\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                Bulu Box\n              </a>\n            </li>\n            <li>\n              <a href=\"https://crayolaciybox.com\">Crayola CIY Box</a>\n            </li>\n            <li>\n              <a\n                href=\"https://disneysubscriptions.com\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                Disney Subscriptions\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://lunarly.com\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Lunarly\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://TheSharkWeekBox.com\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                The Shark Week Box\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div className=\"column is-3\">\n          <p className={footerHeader}>Subscribers</p>\n          <ul>\n            <li>\n              <a href=\"/#/account\">Account</a>\n            </li>\n            <li>\n              <a href=\"/#\">Contact</a>\n            </li>\n            <li>\n              <a href=\"/#/faq\">FAQs</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <hr />\n      <div className=\"has-text-centered\">\n        <p>© 2019 Bulu Group</p>\n      </div>\n    </div>\n  </div>\n))\n\nexport default Footer\n","import React, { useContext, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport AccountStore from '../../stores/AccountStore'\nimport { poochInput } from '../../styles/AccountInfo.module.scss'\n\n/**\n * EditPassword observes the AccountStore\n * It should not change the state of AccountStore.\n * It should update the password of a user when they are logged in\n * So It may need to be aware of a session\n *\n */\n\nexport const EditPassword = observer(props => {\n  const store = useContext(AccountStore)\n  //console.log(props)\n\n  const [newPassword, setNewPassword] = useState('')\n  const [passwordConfirm, setPasswordConfirm] = useState('')\n  const [renderForm, setRenderForm] = useState(false)\n\n  const validateForm = () => {\n    return (\n      newPassword === passwordConfirm &&\n      newPassword.length !== 0 &&\n      passwordConfirm.length !== 0\n    )\n  }\n\n  const handleChange = event => {\n    if (event.target.id === 'editPassword') {\n      setNewPassword(event.target.value)\n    } else if (event.target.id === 'editPasswordConfirm') {\n      setPasswordConfirm(event.target.value)\n    } else if (event.target.id === 'changePassword') {\n      event.preventDefault()\n      setRenderForm(!renderForm)\n    }\n  }\n\n  const handleSubmit = async event => {\n    event.preventDefault()\n    await store.setPassword(newPassword)\n    setRenderForm(false)\n    //window.location.hash = '/';\n  }\n\n  return (\n    <div>\n      {!renderForm && (\n        <button className=\"a11y\" onClick={handleChange} id=\"changePassword\">\n          {' '}\n          Change Password\n        </button>\n      )}\n      {renderForm && (\n        <div>\n          <div className=\"field\">\n            <p className=\"control\">\n              <input\n                className={'input ' + poochInput}\n                type=\"password\"\n                id=\"editPassword\"\n                placeholder=\"New Password\"\n                onChange={handleChange}\n              />\n            </p>\n          </div>\n          <div className=\"field\">\n            <p className=\"control\">\n              <input\n                className={'input ' + poochInput}\n                type=\"password\"\n                id=\"editPasswordConfirm\"\n                placeholder=\"Re-Enter Password\"\n                onChange={handleChange}\n              />\n            </p>\n            <div />\n          </div>\n          <div className=\"field is-grouped\">\n            <p className=\"control is-expanded\">\n              {/* eslint-disable-next-line */}\n              <button\n                href=\"#\"\n                className=\"button a11y\"\n                onClick={handleChange}\n                id=\"changePassword\"\n              >\n                Cancel\n              </button>\n            </p>\n            <p className=\"control\">\n              <button\n                className=\"button btn-orange\"\n                disabled={!validateForm()}\n                type=\"submit\"\n                onClick={handleSubmit}\n              >\n                Update Password\n              </button>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n})\n","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\nimport AccountStore from '../../stores/AccountStore'\nimport { poochInput } from '../../styles/AccountInfo.module.scss'\n\n/**\n * EditName observes AccountStore\n * Edits Only the name portion of the account edit\n *\n */\n\nexport const EditName = observer(props => {\n  const store = useContext(AccountStore)\n\n  const handleChange = async event => {\n    store.set(event.target.id, event.target.value)\n  }\n\n  return (\n    <div style={{ width: '100%', margin: '0 auto' }}>\n      <div className=\"field-body\">\n        <div className=\"field\">\n          <p className=\"control\">\n            <input\n              className={'input ' + poochInput}\n              type=\"text\"\n              id=\"firstName\"\n              placeholder=\"First Name\"\n              onChange={handleChange}\n            />\n          </p>\n        </div>\n        <div className=\"field\">\n          <p className=\"control\">\n            <input\n              className={'input ' + poochInput}\n              type=\"text\"\n              id=\"lastName\"\n              placeholder=\"Last Name\"\n              onChange={handleChange}\n            />\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n})\n","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\nimport AccountStore from '../../stores/AccountStore'\nimport { poochInput } from '../../styles/AccountInfo.module.scss'\n\n/**\n * Edits email and also updates the rest of the fields\n * Field that updates the email field.\n *\n */\n\nexport const EditEmail = observer(props => {\n  const store = useContext(AccountStore)\n\n  const handleChange = async event => {\n    store.set(event.target.id, event.target.value)\n  }\n\n  return (\n    <div className=\"field\">\n      <p className=\"control\">\n        <input\n          className={'input ' + poochInput}\n          type=\"text\"\n          id=\"newEmail\"\n          placeholder=\"Email\"\n          onChange={handleChange}\n        />\n      </p>\n    </div>\n  )\n})\n","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\nimport AccountStore from '../../stores/AccountStore'\nimport { toJS } from 'mobx'\nimport { REACT_APP_STRIPE_KEY } from '../../shop-config'\nimport {\n  CardElement,\n  Elements,\n  StripeProvider,\n  injectStripe,\n} from 'react-stripe-elements'\n\nimport {\n  Link,\n  poochInput,\n  stripeElementsInput,\n} from '../../styles/AccountInfo.module.scss'\n\n/**\n * Edit Card Observes AccountStore\n * Uses Stripe Elements to tokenize the entered card.\n * After Submision the card token is then processed by the `store.updatePaymentBilling`\n * and then the result is returned by `<Notify/>`\n *\n */\nconst createOptionsElements = () => {\n  return [\n    {\n      cssSrc: 'https://fonts.googleapis.com/css?family=Rubik&display=swap',\n    },\n  ]\n}\n\nconst createOptions = (fontSize, padding) => {\n  return {\n    style: {\n      base: {\n        fontSize: '14px',\n        color: '#495057',\n        backgroundColor: '#fff',\n        fontWeight: '400',\n        letterSpacing: '0.025em',\n        fontFamily: 'Rubik, san-serif',\n        '::placeholder': {\n          color: '#aab7c4',\n        },\n      },\n      invalid: {\n        color: '#9e2146',\n      },\n    },\n  }\n}\n\nconst CardForm = injectStripe(props => {\n  const store = useContext(AccountStore)\n  const handleSubmit = event => {\n    event.preventDefault()\n    if (props.stripe) {\n      props.stripe.createToken().then(payload =>\n        store.updatePaymentBilling(payload).then(() => {\n          store.set('renderCardForm', !toJS(store.renderCardForm))\n        })\n      )\n    } else {\n      console.log(\"Stripe.js hasn't loaded yet.\")\n    }\n  }\n\n  const cancel = event => {\n    event.preventDefault()\n    store.set('renderCardForm', !toJS(store.renderCardForm))\n  }\n  const handleChange = event => {\n    store.set(event.target.id, event.target.value)\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>Name on Card</label>\n      <div className=\"field-body\">\n        <div className=\"field\">\n          <p className=\"control\">\n            <input\n              className={'input ' + poochInput}\n              type=\"text\"\n              id=\"firstName\"\n              placeholder=\"First Name\"\n              onChange={handleChange}\n            />\n          </p>\n        </div>\n        <div className=\"field\">\n          <p className=\"control\">\n            <input\n              className={'input ' + poochInput}\n              type=\"text\"\n              id=\"lastName\"\n              placeholder=\"Last Name\"\n              onChange={handleChange}\n            />\n          </p>\n        </div>\n      </div>\n      <div className=\"field\">\n        <label>\n          Card Details\n          <CardElement\n            className={stripeElementsInput}\n            {...createOptions(props.fontSize)}\n          />\n        </label>\n      </div>\n      <div className=\"field is-grouped\">\n        <p className=\"control is-expanded\">\n          <button className={Link} onClick={cancel} href=\"#\">\n            Cancel\n          </button>\n        </p>\n        <p className=\"control\" style={{ textAlign: 'right' }}>\n          <button className=\"button btn-orange\" type=\"submit\">\n            Update\n          </button>\n        </p>\n      </div>\n    </form>\n  )\n})\n\nexport const EditCard = observer(props => {\n  const fontSize = '14px'\n  const store = useContext(AccountStore)\n  const showForm = event => {\n    event.preventDefault()\n    store.set('renderCardForm', !toJS(store.renderCardForm))\n  }\n  if (!toJS(store.renderCardForm)) {\n    if (store.customer.billingInfo) {\n      return (\n        <div>\n          <p>{store.customer.billingInfo.name}</p>\n          <p>\n            {store.customer.billingInfo.cardBrand} ending in{' '}\n            {store.customer.billingInfo.cardLast4}\n          </p>\n          <p>\n            Expires{' '}\n            {store.customer.billingInfo &&\n              store.customer.billingInfo.cardExpMonth}\n            /{store.customer.billingInfo.cardExpYear}\n          </p>\n\n          <button className=\"a11y\" onClick={showForm}>\n            Update Card\n          </button>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <p>No Billing Address</p>\n        </div>\n      )\n    }\n  } else {\n    return (\n      <div className={stripeElementsInput}>\n        <StripeProvider apiKey={REACT_APP_STRIPE_KEY}>\n          <Elements fonts={createOptionsElements()}>\n            <CardForm fontSize={fontSize} />\n          </Elements>\n        </StripeProvider>\n      </div>\n    )\n  }\n})\n","import React, { useContext, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { toJS } from 'mobx'\nimport AccountStore from '../../stores/AccountStore'\nimport states from '../../states.json'\nimport {\n  accountSubSectionHeader,\n  Link,\n  poochInput,\n} from '../../styles/AccountInfo.module.scss'\n\n/**\n * EditBilling Observes AccountStore\n * When `Billing Address` is clicked EditBilling revieals a form\n * that updates the billing address when submited. `store.updateBilling()` is called\n * and a `<Notify/>` message is returned on a result.\n *\n */\n\nexport const EditBilling = observer(props => {\n  const store = useContext(AccountStore)\n  const [renderBilling, setRenderBillling] = useState(false)\n\n  //state\n  const showForm = event => {\n    event.preventDefault()\n    setRenderBillling(!renderBilling)\n  }\n\n  const handleChange = event => {\n    store.set(event.target.id, event.target.value)\n  }\n  const updateBilling = async event => {\n    await store.updateBilling()\n    setRenderBillling(!renderBilling)\n  }\n\n  if (!renderBilling) {\n    return (\n      <div>\n        <p className={accountSubSectionHeader}>Billing Address</p>\n        {console.log(store.customer)}\n        {store.customer && (\n          <span>\n            <p>{toJS(store.customer.billingInfo.name)}</p>\n            <p>{toJS(store.customer.billingInfo.address1)}</p>\n            <p>{toJS(store.customer.billingInfo.address2)}</p>\n            <p>\n              {toJS(store.customer.billingInfo.city)}{' '}\n              {toJS(store.customer.billingInfo.state)}{' '}\n              {toJS(store.customer.billingInfo.zipcode)}\n            </p>\n          </span>\n        )}\n        {/*eslint-disable-next-line*/}\n        <a className={Link} onClick={showForm} href=\"\">\n          Edit Billing Address\n        </a>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <div className=\"field-body\" style={{ marginBottom: '.5rem' }}>\n          <div className=\"field\">\n            <p className=\"control\">\n              <lable>First Name</lable>\n              <input\n                className={'input ' + poochInput}\n                type=\"text\"\n                id=\"firstName\"\n                placeholder=\"First Name\"\n                onChange={handleChange}\n              />\n            </p>\n          </div>\n          <div className=\"field\">\n            <p className=\"control\">\n              <lable>Last Name</lable>\n              <input\n                className={'input ' + poochInput}\n                type=\"text\"\n                id=\"lastName\"\n                placeholder=\"Last Name\"\n                onChange={handleChange}\n              />\n            </p>\n          </div>\n        </div>\n        <div className=\"field\">\n          <p className=\"control\">\n            <lable>Address 1</lable>\n            <input\n              className={'input ' + poochInput}\n              type=\"text\"\n              id=\"address1\"\n              placeholder=\"Address 1\"\n              onChange={handleChange}\n            />\n          </p>\n        </div>\n        <div className=\"field\">\n          <lable>Address 2</lable>\n          <p className=\"control\">\n            <input\n              className={'input ' + poochInput}\n              type=\"text\"\n              id=\"address2\"\n              placeholder=\"Address 2\"\n              onChange={handleChange}\n            />\n          </p>\n        </div>\n        <div className=\"field-body\">\n          <div className=\"field\">\n            <p className=\"control\">\n              <lable>State</lable>\n              <select\n                className={poochInput}\n                id=\"state\"\n                placeholder=\"State\"\n                onChange={handleChange}\n                style={{ height: '54px' }}\n              >\n                {states.map(state => (\n                  <option value={state.abbreviation} key={state.abbreviation}>\n                    {state.name}\n                  </option>\n                ))}\n              </select>\n            </p>\n          </div>\n          <div className=\"field\">\n            <lable>City</lable>\n            <p className=\"control\">\n              <input\n                className={'input ' + poochInput}\n                type=\"text\"\n                id=\"city\"\n                placeholder=\"City\"\n                onChange={handleChange}\n              />\n            </p>\n          </div>\n        </div>\n        <div className=\"field\">\n          <p className=\"control\">\n            <lable>Zip</lable>\n            <input\n              className={'input ' + poochInput}\n              type=\"zip\"\n              id=\"zip\"\n              placeholder=\"Zip\"\n              onChange={handleChange}\n            />\n          </p>\n        </div>\n        <div className=\"field is-grouped\">\n          <p className=\"control is-expanded\">\n            <button className={Link} onClick={showForm} href=\"\">\n              Cancel\n            </button>\n          </p>\n          <p className=\"control\" style={{ textAlign: 'right' }}>\n            <button\n              className=\"button btn-orange\"\n              type=\"submit\"\n              onClick={updateBilling}\n            >\n              Update Billing\n            </button>\n          </p>\n        </div>\n      </div>\n    )\n  }\n})\n","import React, { useContext, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport AccountStore from '../../stores/AccountStore'\nimport { poochInput, Link } from '../../styles/AccountInfo.module.scss'\n\n/**\n * Adds a discount to an existing subscription.\n * Renders the form when `Add A Discount` is clicked\n * Submit's a code via `store.addDiscount` and returns the result via a `<Notify/>` message.\n */\n\nexport const Discount = observer(props => {\n  const store = useContext(AccountStore)\n  const [render, setRender] = useState(false)\n\n  const handleChange = async event => {\n    store.set(event.target.id, event.target.value)\n  }\n\n  const showhide = async event => {\n    event.preventDefault()\n    setRender(!render)\n  }\n\n  const AddDiscount = async event => {\n    event.preventDefault()\n    store.addDiscount(props.s.id, store.discountCode)\n  }\n  if (!render) {\n    return (\n      <div>\n        <button className=\"button is-primary is-link\" onClick={showhide}>\n          Add A Discount\n        </button>\n      </div>\n    )\n  } else {\n    return (\n      <div style={{ maxWidth: '400px' }}>\n        <div className=\"field\">\n          <p className=\"control\">\n            <input\n              className={'input ' + poochInput}\n              type=\"text\"\n              id=\"discountCode\"\n              placeholder=\"Discount Code\"\n              onChange={handleChange}\n            />\n          </p>\n        </div>\n        <div className=\"field is-grouped\">\n          <p className=\"control is-expanded\">\n            <button className={Link} onClick={showhide} href=\"\">\n              Cancel\n            </button>\n          </p>\n          <p className=\"control\" style={{ textAlign: 'right' }}>\n            <button\n              className=\"button btn-orange\"\n              type=\"submit\"\n              onClick={AddDiscount}\n            >\n              Add A Discount\n            </button>\n          </p>\n        </div>\n      </div>\n    )\n  }\n})\n","import React, { useContext, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport AccountStore from '../../stores/AccountStore'\nimport states from '../../states.json'\nimport { Link, poochInput } from '../../styles/AccountInfo.module.scss'\n\n/**\n * EditShipping Observes AccountStore\n * Updates the Subscription's Shipping address.\n * Displays a <Notify/> notification when updated.\n *\n */\n\nexport const EditShipping = observer(props => {\n  const store = useContext(AccountStore)\n  const [renderBilling, setRenderBillling] = useState(false)\n  const showForm = event => {\n    event.preventDefault()\n    setRenderBillling(!renderBilling)\n  }\n\n  const handleChange = event => {\n    store.set(event.target.id, event.target.value)\n  }\n\n  if (!renderBilling) {\n    return (\n      <div>\n        <button className={'a11y ' + Link} onClick={showForm}>\n          Edit Shipping Address\n        </button>\n      </div>\n    )\n  } else {\n    return (\n      <div style={{ fontWeight: 400 }}>\n        <div className=\"field-body\" style={{ marginBottom: '.5rem' }}>\n          <div className=\"field\">\n            <p className=\"control\">\n              <lable>First Name</lable>\n              <input\n                className={'input ' + poochInput}\n                type=\"text\"\n                id=\"firstName\"\n                placeholder=\"First Name\"\n                onChange={handleChange}\n              />\n            </p>\n          </div>\n          <div className=\"field\">\n            <p className=\"control\">\n              <lable>Last Name</lable>\n              <input\n                className={'input ' + poochInput}\n                type=\"text\"\n                id=\"lastName\"\n                placeholder=\"Last Name\"\n                onChange={handleChange}\n              />\n            </p>\n          </div>\n        </div>\n        <div className=\"field\">\n          <p className=\"control\">\n            <lable>Address 1</lable>\n            <input\n              className={'input ' + poochInput}\n              type=\"text\"\n              id=\"address1\"\n              placeholder=\"Address 1\"\n              onChange={handleChange}\n            />\n          </p>\n        </div>\n        <div className=\"field\">\n          <lable>Address 2</lable>\n          <p className=\"control\">\n            <input\n              className={'input ' + poochInput}\n              type=\"text\"\n              id=\"address2\"\n              placeholder=\"Address 2\"\n              onChange={handleChange}\n            />\n          </p>\n        </div>\n        <div className=\"field-body\">\n          <div className=\"field\">\n            <p className=\"control\">\n              <lable>State</lable>\n              <select\n                className={poochInput}\n                id=\"state\"\n                placeholder=\"State\"\n                onChange={handleChange}\n                style={{ height: '54px' }}\n              >\n                {states.map(state => (\n                  <option value={state.abbreviation} key={state.abbreviation}>\n                    {state.name}\n                  </option>\n                ))}\n              </select>\n            </p>\n          </div>\n          <div className=\"field\">\n            <lable>City</lable>\n            <p className=\"control\">\n              <input\n                className={'input ' + poochInput}\n                type=\"text\"\n                id=\"city\"\n                placeholder=\"City\"\n                onChange={handleChange}\n              />\n            </p>\n          </div>\n        </div>\n        <div className=\"field\">\n          <p className=\"control\">\n            <lable>Zip</lable>\n            <input\n              className={'input ' + poochInput}\n              type=\"zip\"\n              id=\"zip\"\n              placeholder=\"Zip\"\n              onChange={handleChange}\n            />\n          </p>\n        </div>\n        <div className=\"field is-grouped\">\n          <p className=\"control is-expanded\">\n            <button className={Link} onClick={showForm} href=\"\">\n              Cancel\n            </button>\n          </p>\n          <p className=\"control\" style={{ textAlign: 'right' }}>\n            <button\n              className=\"button btn-orange\"\n              type=\"submit\"\n              onClick={async () => {\n                await store.updateSubscriptionAddress(props.sub)\n                setRenderBillling(!renderBilling)\n              }}\n            >\n              Update Shipping Address\n            </button>\n          </p>\n        </div>\n      </div>\n    )\n  }\n})\n","import React, { useContext, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport AccountStore from '../../stores/AccountStore'\nimport { Link } from '../../styles/AccountInfo.module.scss'\n\n/**\n * CancelSubscription\n * Cancels the users's subscription. After displaying a confirmation modal to the user\n * this component fires the `store.cancelSubscription` function on the `Account Store`.\n */\n\nexport const CancelSubscription = observer(props => {\n  const store = useContext(AccountStore)\n  const [active, setActive] = useState(false)\n\n  const toggleModal = event => {\n    if (event) {\n      event.preventDefault()\n    }\n    setActive(!active)\n  }\n\n  const cancel = () => {\n    store.cancelSubscription(props.s.data.id)\n    toggleModal()\n  }\n  const contactSupport = () => {\n    window.location = 'https://jointhepoochpack.com/pages/contact-us'\n  }\n  return (\n    <div>\n      <button className={'a11y ' + Link} onClick={toggleModal}>\n        Cancel Subscription\n      </button>\n      <div className={'modal ' + (active ? 'is-active' : '')}>\n        <div className=\"modal-background\"></div>\n        <div className=\"modal-content\">\n          <header className=\"modal-card-head\">\n            <p className=\"modal-card-title\">Cancel Subscription</p>\n            <button\n              className=\"delete\"\n              aria-label=\"close\"\n              onClick={toggleModal}\n            ></button>\n          </header>\n          <section className=\"modal-card-body\">\n            <div\n              style={{\n                textAlign: 'center',\n              }}\n            >\n              <img\n                style={{ maxWidth: '320px' }}\n                src=\"https://cdn.shopify.com/s/files/1/0249/2029/3475/t/15/assets/dog_2.png?9220\"\n                alt=\"cuteDog\"\n              ></img>\n              <h1\n                style={{\n                  fontWeight: '500',\n                  fontSize: '21px',\n                }}\n              >\n                Are you sure?\n                <br /> We don't want your Pooch to miss their enrichment time.\n              </h1>\n              <h2>Can we do anything to keep you in the pack?</h2>\n              <br />\n            </div>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <button\n                  className=\"button is-fullwidth is-success\"\n                  onClick={contactSupport}\n                >\n                  Yes, Contact Support\n                </button>\n              </div>\n              <div className=\"column\">\n                <button\n                  className=\"button is-fullwidth is-danger\"\n                  onClick={cancel}\n                >\n                  No, Cancel My Subscription\n                </button>\n              </div>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  )\n})\n","import React, { useContext, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport AccountStore from '../../stores/AccountStore'\nimport { Link } from '../../styles/AccountInfo.module.scss'\n\n/**\n * Skip observes AccountStore\n * Skip skips the current subscription for a specified time.\n * Skip calls `store.skipBox` and returns a notificaiton via `<Notify/>`\n *\n */\n\nexport const Skip = observer(props => {\n  const store = useContext(AccountStore)\n  const [active, setActive] = useState(false)\n\n  const toggleModal = event => {\n    if (event) {\n      event.preventDefault()\n    }\n    setActive(!active)\n  }\n\n  const skip = () => {\n    store.skipBox(props.s.data.id, props.s.data.nextChargeDate)\n    toggleModal()\n  }\n  const contactSupport = () => {\n    //window.location = 'https://jointhepoochpack.com/pages/contact-us'\n  }\n  return (\n    <div>\n      {/*eslint-disable-next-line */}\n      <button className={'a11y ' + Link} href=\"#\" onClick={toggleModal}>\n        Skip Next Box\n      </button>\n      <div className={'modal ' + (active ? 'is-active' : '')}>\n        <div className=\"modal-background\"></div>\n        <div className=\"modal-content\">\n          <header className=\"modal-card-head\">\n            <p className=\"modal-card-title\">Skip Subscription</p>\n            <button\n              className=\"delete\"\n              aria-label=\"close\"\n              onClick={toggleModal}\n            ></button>\n          </header>\n          <section className=\"modal-card-body\">\n            <div\n              style={{\n                textAlign: 'center',\n              }}\n            >\n              <h1\n                style={{\n                  fontWeight: '500',\n                  fontSize: '21px',\n                }}\n              >\n                Are you sure?\n                <br /> We don't want you to miss your next box.\n              </h1>\n              <br />\n            </div>\n            <div className=\"columns\">\n              <div className=\"column\">\n                <button\n                  className=\"button is-fullwidth is-danger\"\n                  onClick={contactSupport}\n                >\n                  Back\n                </button>\n              </div>\n              <div className=\"column\">\n                <button\n                  className=\"button is-fullwidth is-success\"\n                  onClick={skip}\n                >\n                  No, Skip this Box\n                </button>\n              </div>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  )\n})\n","import React from 'react'\nimport moment from 'moment'\n\n/**\n * OrderList observes AccountStore\n * Displays Order details per each box from accountStore.customer\n * Includes:\n *  - Order Number\n *  - Order Date\n *  - Shipping Date\n *  - Fulfillment Status\n *  - Tracking Number\n * This Component renders each row of the OrderList Component.\n */\n\nexport const OrderRow = props => {\n  return (\n    <tr style={{ padding: '5px' }}>\n      <td>{props.box.orderNumber}</td>\n      <td>{moment(props.box.orderDate).format('MMMM D, YYYY')}</td>\n      <td>\n        {props.box.shippingDate === null\n          ? 'Not Shipped'\n          : moment(props.box.shippingDate).format('MMMM D, YYYY')}\n      </td>\n      <td>\n        {props.box.trackingNumber === null\n          ? 'Unfulfilled'\n          : props.box.trackingStatus === 'Unfulfilled'\n          ? 'Scheduled'\n          : props.box.trackingStatus}\n      </td>\n      <td>\n        {props.box.trackingNumber === null ? (\n          'Unavailable'\n        ) : (\n          <a href={props.box.trackingLink} target=\"blank_\">\n            {props.box.trackingnumber}\n          </a>\n        )}\n      </td>\n    </tr>\n  )\n}\n","import React from 'react'\nimport moment from 'moment'\n\n/**\n * OrderList observes AccountStore\n * Displays Order details per each box from accountStore.customer\n * Includes:\n *  - Order Number\n *  - Order Date\n *  - Shipping Date\n *  - Fulfillment Status\n *  - Tracking Number\n * This Component is only visible on mobile.\n */\n\nexport const OrderMobile = props => {\n  return (\n    <div style={{ padding: '5px' }}>\n      <p>\n        <strong>Order Number:</strong> {props.box.orderNumber}\n      </p>\n      <p>\n        <strong>Order Date:</strong>{' '}\n        {moment(props.box.orderDate).format('MMMM D, YYYY')}\n      </p>\n      <p>\n        <strong>Shipping Date:</strong>{' '}\n        {props.box.shippingDate === null\n          ? 'Not Shipped'\n          : moment(props.box.shippingDate).format('MMMM D, YYYY')}\n      </p>\n      <p>\n        <strong>Fulfillment Status:</strong>{' '}\n        {props.box.trackingNumber === null\n          ? 'Unfulfilled'\n          : props.box.trackingStatus === 'Unfulfilled'\n          ? 'Scheduled'\n          : props.box.trackingStatus}\n      </p>\n      <p>\n        {' '}\n        <strong>Tracking Number:</strong>{' '}\n        {props.box.trackingNumber === null ? (\n          'Unavailable'\n        ) : (\n          <a href={props.box.trackingLink} target=\"blank_\">\n            {props.box.trackingNumber}\n          </a>\n        )}\n      </p>\n      <hr />\n    </div>\n  )\n}\n","import React, { useContext, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport AccountStore from '../../stores/AccountStore'\nimport { EditPassword } from './EditPassword'\nimport { EditName } from './EditName'\nimport { EditEmail } from './EditEmail'\nimport {\n  accountSectionHeader,\n  accountSubSectionHeader,\n  Link,\n} from '../../styles/AccountInfo.module.scss'\n\n/**\n * AccountInformation observes the AccountStore\n * Displays the current account information\n * Contains the actions to the Billing Address, Card On File\n * Account Information Edit, Change Password, forms.\n *\n */\n\nexport const AccountInformation = observer(props => {\n  const store = useContext(AccountStore)\n  const [showForm, setShowForm] = useState(false)\n  const handleForm = event => {\n    event.preventDefault()\n    setShowForm(!showForm)\n  }\n\n  const handleSubmit = async event => {\n    event.preventDefault()\n    await store.updateUser()\n    setShowForm(false)\n  }\n\n  const validateEmail = addr => {\n    //eslint-disable-next-line\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(addr)) {\n      return true\n    }\n    return false\n  }\n\n  const validateForm = () => {\n    //let e = store.newEmail.length > 0\n    let e = validateEmail(store.newEmail)\n    let n = store.firstName.length > 0 && store.lastName.length > 0\n    return e && n\n  }\n\n  return (\n    <div className=\"box\" style={{ background: '#f2f2f2', padding: '1.5em' }}>\n      <h3 className={accountSectionHeader}>Account Information</h3>\n      <div className=\"columns\">\n        <div className=\"column\">\n          {!showForm && (\n            <div>\n              <div className=\"columns\">\n                <div className=\"column\">\n                  <p className={accountSubSectionHeader}>Name</p>\n                  <p> {store.customer && store.customer.name} </p>\n                </div>\n                <div className=\"column\">\n                  <p className={accountSubSectionHeader}>Email</p>\n                  <p>{store.customer && store.customer.email}</p>\n                </div>\n              </div>\n              <button className=\"a11y\" onClick={handleForm} href=\"#\">\n                {' '}\n                Edit\n              </button>\n            </div>\n          )}\n          {showForm && (\n            <div>\n              <div>\n                <p className={accountSubSectionHeader}>Name</p>\n                <EditName />\n                <p className={accountSubSectionHeader}>Email</p>\n                <EditEmail />\n              </div>\n              <div className=\"field is-grouped\" style={{ margin: '1em 0 0 0' }}>\n                <p className=\"control is-expanded\">\n                  {/*eslint-disable-next-line */}\n                  <a href=\"#\" className={Link} onClick={handleForm} href=\"#\">\n                    Cancel\n                  </a>\n                </p>\n                <p className=\"control\">\n                  <button\n                    className=\"button btn-orange\"\n                    disabled={!validateForm()}\n                    type=\"submit\"\n                    onClick={handleSubmit}\n                  >\n                    UPDATE\n                  </button>\n                </p>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"column\">\n          <p className={accountSubSectionHeader}>Password</p>\n          <EditPassword\n            showForm={() => {\n              showForm()\n            }}\n          />{' '}\n        </div>\n      </div>\n    </div>\n  )\n})\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { EditCard } from './EditCard'\nimport {\n  accountSectionHeader,\n  accountSubSectionHeader,\n} from '../../styles/AccountInfo.module.scss'\nimport { EditBilling } from './EditBillingInfomration'\n\n/**\n * BillingInformation\n * Contains the Lower section of Account Info\n * Allows the user to Edit Billing Address and the card on file.\n */\n\nexport const BillingInformation = observer(props => {\n  return (\n    <div className=\"box\" style={{ background: '#f2f2f2', padding: '1.5em' }}>\n      <h3 className={accountSectionHeader}>Billing Information</h3>\n      <div className=\"columns\">\n        <div className=\"column\">\n          <EditBilling />\n        </div>\n        <div className=\"column\">\n          <p className={accountSubSectionHeader}>Card on File</p>\n          <EditCard />\n        </div>\n      </div>\n    </div>\n  )\n})\n","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\nimport { toJS } from 'mobx'\nimport AccountStore from '../../stores/AccountStore'\nimport {\n  AccountHeaderStyle,\n  underline,\n} from '../../styles/AccountHeader.module.scss'\n\n/**\n * Account Header\n * This component Displays the user's name in a freindly way.\n *\n */\n\nexport const AccountHeader = observer(props => {\n  const store = useContext(AccountStore)\n  if (store.customer) {\n    var customerName = toJS(store.customer).name.split(' ')[0]\n  }\n  return (\n    <div className={AccountHeaderStyle}>\n      <h1>\n        Welcome back,{' '}\n        <span className={underline}>{store.customer && customerName}</span>\n      </h1>\n    </div>\n  )\n})\n","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\nimport AccountStore from '../../stores/AccountStore'\nimport {\n  accountNav,\n  accountNavItem,\n  accountNavList,\n  navLink,\n  active,\n} from '../../styles/AccountNav.module.scss'\n/**\n * Account nav displays on the right\n * side of the account page on Desktop.\n * The Nav on mobile is a hidden accordian style component\n */\n\nexport const AccountNav = observer(props => {\n  const store = useContext(AccountStore)\n\n  const handleClick = event => {\n    event.preventDefault()\n    store.set('accountTab', event.target.name)\n  }\n  return (\n    <div className={'box ' + accountNav}>\n      <ul className={accountNavList}>\n        <li className={accountNavItem}>\n          <button\n            onClick={handleClick}\n            name=\"#mySubscriptions\"\n            className={\n              'a11y ' +\n              navLink +\n              ' ' +\n              (store.accountTab === '#mySubscriptions' ? active : '')\n            }\n          >\n            My Subscriptions\n          </button>\n        </li>\n        <li className={accountNavItem}>\n          <button\n            onClick={handleClick}\n            name=\"#myOrders\"\n            className={\n              'a11y ' +\n              navLink +\n              ' ' +\n              (store.accountTab === '#myOrders' ? active : '')\n            }\n          >\n            My Orders\n          </button>\n        </li>\n        <li className={accountNavItem}>\n          <button\n            onClick={handleClick}\n            name=\"#accountInfo\"\n            className={\n              'a11y ' +\n              navLink +\n              ' ' +\n              (store.accountTab === '#accountInfo' ? active : '')\n            }\n          >\n            Account Info\n          </button>\n        </li>\n      </ul>\n    </div>\n  )\n})\n","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\nimport { toJS } from 'mobx'\nimport { OrderRow } from './OrderRow'\nimport { OrderMobile } from './OrderMobile'\nimport { orderTable } from '../../styles/OrderList.module.scss'\nimport AccountStore from '../../stores/AccountStore'\n/**\n * OrderList observes AccountStore\n * Displays Order details per each box from accountStore.customer\n * Includes:\n *  - Order Number\n *  - Order Date\n *  - Shipping Date\n *  - Fulfillment Status\n *  - Tracking Number\n *\n */\n\nexport const OrderList = observer(props => {\n  const store = useContext(AccountStore)\n\n  return (\n    <div className=\"box\">\n      <table className={orderTable + ' is-hidden-touch'}>\n        <thead>\n          <tr>\n            <th>Order Number</th>\n            <th>Order Date</th>\n            <th>Shipping Date</th>\n            <th>Fulfillment Status</th>\n            <th>Tracking Number</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {toJS(store.customer.shipments) &&\n            toJS(store.customer.shipments).map(o => {\n              let order = toJS(o)\n              if (order.orderNumber) {\n                return <OrderRow box={order} />\n              }\n              return null\n            })}\n          {!props.boxes && (\n            <div className=\"container\">\n              <div className=\"is-center\">\n                <img\n                  src=\"https://cdn.shopify.com/s/files/1/0078/4944/3401/t/14/assets/spinner.gif\"\n                  alt=\"loading\"\n                  id=\"loading-account\"\n                />\n              </div>\n            </div>\n          )}\n        </tbody>\n      </table>\n      <div className=\"is-hidden-desktop\">\n        {toJS(store.customer.shipments) &&\n          toJS(store.customer.shipments).map(o => {\n            let order = toJS(o)\n            if (order.orderNumber) {\n              return <OrderMobile box={order} />\n            }\n            return null\n          })}\n      </div>\n    </div>\n  )\n})\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { AccountInformation } from './AccountInformation'\nimport { BillingInformation } from './BillingInformation'\n/**\n * AccountInfo\n *\n * This component Composts `AccountInformation` and `BillingInformation`.\n * Please refer to each component for their individual documentation.\n *\n */\n\nexport const AccountInfo = observer(props => {\n  return (\n    <div>\n      <AccountInformation />\n      <br />\n      <BillingInformation />\n    </div>\n  )\n})\n","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\nimport { toJS } from 'mobx'\nimport AccountStore from '../../stores/AccountStore'\nimport {\n  slideLeft,\n  notificationContainer,\n} from '../../styles/Notify.module.scss'\n\n/**\n * Notify observes the AccountStore\n *\n *\n * Notify is a toast like component completely built with\n * React and bluma.io\n * It includes a basic fly in animation\n * Call pushNotification() on `AccountStore` to activate `<Notify/>\n *\n */\n\nexport const Notify = observer(props => {\n  const store = useContext(AccountStore)\n  return (\n    <div>\n      {store.toast.display && (\n        <div className={notificationContainer + ' ' + slideLeft}>\n          <div className={'notification is-' + store.toast.color}>\n            <button\n              className=\"delete\"\n              onClick={() => store.showHideNotification(false)}\n            ></button>\n            {toJS(store.toast.message)}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n})\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\nimport { toJS } from 'mobx'\nimport AccountStore from '../../stores/AccountStore'\nimport { Discount } from './Discount'\nimport {\n  subscriptionHeader,\n  subscriptionDetails,\n  boxImage,\n  subscriptionContainer,\n} from '../../styles/Subscription.module.scss'\nimport { EditShipping } from './EditShippinginfo'\nimport { CancelSubscription } from './CancelSubscription'\nimport { Skip } from './SkipSubscription'\n\n/**\n * Subscriptions observers and modifys AccountStore\n * Subscriptions contains the markup for the subscription data itself.\n * It also contains sub components that provide other function.\n *   - <CancelSubscription s={s} />\n *   - <Skip s={s} />\n *   - <EditShipping sub={s} />\n *   - <Discount s={s} />\n *\n * They all accept a discrite subscription object that is passed in as a prop s.\n * This is used as a index to modify the subscriptions object on the store.\n */\nconst green = {\n  color: 'green',\n}\nconst red = {\n  color: 'red',\n}\n\nexport const Subscriptions = observer(props => {\n  const store = useContext(AccountStore)\n  let subs = toJS(store.subscriptions)\n  console.log(subs)\n  return (\n    <div className={subscriptionContainer}>\n      {subs &&\n        [...store.subscriptions.values()].map(s => {\n          console.log(s)\n          return (\n            <div className=\"box\">\n              <div className=\"columns\">\n                <div className=\"column is-4\">\n                  <img\n                    className={boxImage}\n                    alt=\"box\"\n                    src={store.variants.get(s.sku).image}\n                  />\n                </div>\n                <div className=\"column is-8\">\n                  <h3 className={subscriptionHeader}>\n                    {store.variants.get(s.sku).productTitle}\n                  </h3>\n                  <p className={subscriptionDetails}>\n                    {s.title && toJS(s.title).slice(10)}\n                  </p>\n                  <br />\n                  <p className={subscriptionDetails}>\n                    Subscription Status:{' '}\n                    <span\n                      style={s && toJS(s.status) === 'ACTIVE' ? green : red}\n                    >\n                      {s && s.status}\n                    </span>\n                  </p>\n                  <p className={subscriptionDetails}>\n                    Next Billing Date: {s.nextCharge}\n                  </p>\n                  <br />\n                  <p className={subscriptionDetails}>\n                    Shipping Address:{' '}\n                    <span className=\"light\">\n                      {s.address && s.address.address1}{' '}\n                      {s.address && s.address.address2},{' '}\n                      {s.address && s.address.city},{' '}\n                      {s.address && s.address.state},{' '}\n                      {s.address && s.address.zipcode}\n                    </span>\n                    <br />\n                  </p>\n                  <br />\n                  <CancelSubscription s={s} />\n                  <Skip s={s} />\n                  <EditShipping sub={s} />\n                  <br />\n                  <Discount s={s} />\n                </div>\n              </div>\n            </div>\n          )\n        })}\n    </div>\n  )\n})\n","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\nimport { toJS } from 'mobx'\nimport AccountStore from '../../stores/AccountStore'\nimport { Footer } from '../Footer'\nimport { NavBar } from '../NavBar'\nimport { AccountHeader } from './AccountHeader'\nimport { AccountNav } from './AccountNav'\nimport { Subscriptions } from './Subscriptions'\n\nimport { OrderList } from './OrderList'\nimport {\n  container,\n  columnRight,\n  accountContainer,\n} from '../../styles/MyAccount.module.scss'\nimport { pageHeader } from '../../styles/Subscription.module.scss'\nimport { AccountInfo } from './AccountInfo'\nimport { Notify } from './Notify'\n/**\n * AccountContainer serves as the global container for all Account related components.\n * It is the entry point when a user logs into their account.\n *\n * Inside the AccountContainer Return statement we have\n *\n *   <Notify/>\n *   <NavBar/>\n *   <AccountNav/>\n *   <Subscriptions/>\n *   <OrderList/>\n *   <AccountInfo/>\n *   <Footer/>\n *\n *   Many of these components have unique function that are discused inside each's respective doc string\n *   Most are local only to this component `AccountContainer` however some like `Footer` and `Navbar` are used throughout the application.\n *\n */\n\nexport const AccountContainer = observer(props => {\n  const store = useContext(AccountStore)\n  console.log(store)\n  return (\n    <div>\n      <Notify />\n      <NavBar />\n      <AccountHeader />\n      <div className={container + ' ' + accountContainer}>\n        <div className=\"section\">\n          <div class=\"columns\">\n            <div className=\"column is-3\">\n              <AccountNav />\n            </div>\n            <div className={'column is-9 ' + columnRight}>\n              {store.accountTab === '#mySubscriptions' && (\n                <div\n                  className=\"box\"\n                  style={{ background: '#f2f2f2', padding: '1.5em' }}\n                >\n                  <h2 className={pageHeader}>My Subscriptions</h2>\n                  <div className=\"columns\">\n                    <Subscriptions />\n                  </div>\n                </div>\n              )}\n              {store.accountTab === '#myOrders' && (\n                <div>\n                  <OrderList boxes={toJS(store.boxes)} />\n                </div>\n              )}\n              {store.accountTab === '#accountInfo' && (\n                <div>\n                  <AccountInfo />\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  )\n})\n"],"sourceRoot":""}