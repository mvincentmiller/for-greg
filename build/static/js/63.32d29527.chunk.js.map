{"version":3,"sources":["components/SubscribeVertical/DataColumns.js"],"names":["Columns","observer","props","className","columnClass","data","Object","keys","map","key","Component"],"mappings":"gIAAA,2EA0BaA,EAAUC,aAAS,SAAAC,GAE9B,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAW,WAAaD,EAAME,aAChCF,EAAMG,MACLC,OAAOC,KAAKL,EAAMG,MAAMG,KAAI,SAAAC,GAE1B,IAAIJ,EAAO,IAAIC,OAAOJ,EAAMG,KAAKI,IAEjC,OADAJ,EAAI,MAAYI,EACT,kBAACP,EAAMQ,UAAP,CAAiBD,IAAKA,EAAKJ,KAAMA","file":"static/js/63.32d29527.chunk.js","sourcesContent":["import React from 'react'\n//import SubscribeStore from '../../stores/SubscribeVerticalStore'\nimport { observer } from 'mobx-react'\n// import { toJS } from 'mobx'\n\n/**\n *  Contains the single view Vertical subscribe flow\n *\n */\n/*\nconst useDeconstructSku = (vs, selector) => {\n  if (vs) {\n    var selectedVariants = Object.keys(vs).map(v => {\n      if (v.includes(selector)) {\n        console.log('V', v)\n        return v\n      }\n    })\n  }\n  console.log('Selected', selectedVariants)\n  return selectedVariants\n}\n*/\n/**\n * Box Consumes a list of objects and displays in a column/\n */\nexport const Columns = observer(props => {\n  //  const store = useContext(SubscribeStore)\n  return (\n    <div className=\"container\">\n      <div className={'columns ' + props.columnClass}>\n        {props.data &&\n          Object.keys(props.data).map(key => {\n            //eslint-disable-next-line\n            var data = new Object(props.data[key])\n            data['value'] = key\n            return <props.Component key={key} data={data} />\n          })}\n      </div>\n    </div>\n  )\n})\n"],"sourceRoot":""}