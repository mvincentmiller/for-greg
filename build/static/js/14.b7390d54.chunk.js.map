{"version":3,"sources":["styles/NavBar.module.scss","components/NavBar.js","components/Account/ForgotPasswordForm.js","components/ForgotPassword.js"],"names":["module","exports","NavBarItem","props","style","minHeight","className","navItem","href","onClick","image","alt","src","width","maxHeight","text","NavBar","observer","store","useContext","AccountStore","useState","burgerActive","setBurgerActive","role","aria-label","maxWidth","margin","aria-expanded","position","zIndex","top","right","aria-hidden","textAlign","customerToken","event","preventDefault","clearSession","ForgotPasswordForm","email","setEmail","complete","setComplete","handleSubmit","a","console","log","recover","setTimeout","onSubmit","marginBottom","type","id","placeholder","onChange","target","value","ForgotPassword","fontSize"],"mappings":"0HACAA,EAAOC,QAAU,CAAC,QAAU,0B,mICatBC,EAAa,SAAAC,GAAK,OACtB,uBACEC,MAAO,CACLC,UAAW,QAEbC,UAAW,eAAiBC,UAC5BC,KAAML,EAAMK,KACZC,QAASN,EAAMM,SAEdN,EAAMO,OACL,yBACEC,IAAI,aACJC,IAAKT,EAAMO,MACXN,MAAO,CAAES,MAAO,OAAQC,UAAW,UAGtCX,EAAMY,OAkBEC,EAASC,aAAS,SAAAd,GAC7B,IAAMe,EAAQC,qBAAWC,KADa,EAGEC,oBAAS,GAHX,mBAG/BC,EAH+B,KAGjBC,EAHiB,KAUtC,OACE,yBACEjB,UAAU,SACVkB,KAAK,aACLC,aAAW,kBACXrB,MAAO,CAAEsB,SAAU,SAAUC,OAAQ,SAErC,yBAAKrB,UAAU,gBACb,kBAACJ,EAAD,CACEQ,MAAO,gDACPF,KAAK,OAIT,4BACEF,UAAW,uBAAyBgB,EAAe,YAAc,IACjEG,aAAW,OACXG,gBAAc,QACdnB,QAAS,WACPc,GAAiBD,IAEnBlB,MAAO,CACLyB,SAAU,WACVC,OAAQ,KACRC,IAAK,EACLC,MAAO,IAGT,0BAAMC,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,UAEpB,yBACE7B,MAAO,CACLyB,SAAU,WACVE,IAAK,OACLG,UAAW,UAEb5B,UAAW,gBAAkBgB,EAAe,YAAc,KAE1D,yBAAKhB,UAAU,cACb,kBAACJ,EAAD,CAAYa,KAAK,YAAYP,KAAK,OAClC,kBAACN,EAAD,CAAYa,KAAK,MAAMP,KAAK,WAC1BU,EAAMiB,eAAiB,kBAACjC,EAAD,CAAYa,KAAK,SAASP,KAAK,YACvDU,EAAMiB,eACL,kBAACjC,EAAD,CAAYa,KAAK,UAAUN,QAlDtB,SAAA2B,GACbA,EAAMC,iBACNnB,EAAMoB,kBAkDCpB,EAAMiB,eACL,kBAACjC,EAAD,CAAYa,KAAK,aAAaP,KAAK,sBAQhCQ,a,6JCzGFuB,EAAqBtB,aAAS,SAAAd,GACzC,IAAMe,EAAQC,qBAAWC,KADyB,EAGxBC,mBAAS,IAHe,mBAG3CmB,EAH2C,KAGpCC,EAHoC,OAIlBpB,oBAAS,GAJS,mBAI3CqB,EAJ2C,KAIjCC,EAJiC,KAM5CC,EAAY,uCAAG,WAAMR,GAAN,SAAAS,EAAA,6DACnBT,EAAMC,iBACNS,QAAQC,IAAIP,GAFO,SAGbtB,EAAM8B,QAAQR,GAHD,OAInBG,GAAY,GACZM,YAAW,WACTN,GAAY,KACX,KAPgB,2CAAH,sDAUlB,OACE,0BAAMO,SAAUN,EAAcxC,MAAO,CAAEsB,SAAU,QAASC,OAAQ,SAC/De,GACC,uBAAGpC,UAAU,UAAUF,MAAO,CAAE+C,aAAc,SAA9C,2CAC2CX,GAG7C,yBAAKlC,UAAU,SACb,2BACEA,UAAU,QACV8C,KAAK,QACLC,GAAG,gBACHC,YAAY,QACZC,SAAU,SAAAnB,GACRK,EAASL,EAAMoB,OAAOC,WAI5B,yBAAKnD,UAAU,SACb,2BACEA,UAAU,iBACV8C,KAAK,SACLK,MAAM,0B,gCC/ChB,kGAeaC,EAAiBzC,aAAS,kBACrC,yBAAKX,UAAU,+BACb,kBAAC,SAAD,MACA,6BACE,wBAAIF,MAAO,CAAEuD,SAAU,SAAvB,yBACA,2GAIA,6BACA,kBAAC,qBAAD,MACA,6BACA,uBAAGnD,KAAK,YAAR,eAKSkD","file":"static/js/14.b7390d54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navItem\":\"NavBar_navItem__3MGo_\"};","import React, { useContext, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport AccountStore from '../stores/AccountStore'\n\nimport { navItem } from '../styles/NavBar.module.scss'\nimport PropTypes from 'prop-types'\n/**\n * NavBarItem\n * Renders a navbar item from props\n * - props.image\n * - props.href\n * - props.text\n * - props.onClick\n */\nconst NavBarItem = props => (\n  <a\n    style={{\n      minHeight: '80px',\n    }}\n    className={'navbar-item ' + navItem}\n    href={props.href}\n    onClick={props.onClick}\n  >\n    {props.image && (\n      <img\n        alt=\"navigation\"\n        src={props.image}\n        style={{ width: 'auto', maxHeight: '53px' }}\n      />\n    )}\n    {props.text}\n  </a>\n)\n\nNavBarItem.propTypes = {\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n  image: PropTypes.string,\n  text: PropTypes.string,\n}\n\n/**\n * Navbar observes AccountStore\n * Renders each navbar item insidea bluma.io navbar\n * It also handles logic for logined in and logedout states\n *\n * Will colapse into a burger / logo when in mobile mode\n */\nexport const NavBar = observer(props => {\n  const store = useContext(AccountStore)\n\n  const [burgerActive, setBurgerActive] = useState(false)\n\n  const logOut = event => {\n    event.preventDefault()\n    store.clearSession()\n  }\n  ///https:///assets.bulubox.com/assets/bulugroup-logo.png\n  return (\n    <nav\n      className=\"navbar\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n      style={{ maxWidth: '1344px', margin: 'auto' }}\n    >\n      <div className=\"navbar-brand\">\n        <NavBarItem\n          image={'http://cdn.onlinewebfonts.com/svg/img_547.png'}\n          href=\"#\"\n        />\n      </div>\n\n      <button\n        className={'a11y navbar-burger ' + (burgerActive ? 'is-active' : '')}\n        aria-label=\"menu\"\n        aria-expanded=\"false\"\n        onClick={() => {\n          setBurgerActive(!burgerActive)\n        }}\n        style={{\n          position: 'absolute',\n          zIndex: 1001,\n          top: 0,\n          right: 0,\n        }}\n      >\n        <span aria-hidden=\"true\"></span>\n        <span aria-hidden=\"true\"></span>\n        <span aria-hidden=\"true\"></span>\n      </button>\n      <div\n        style={{\n          position: 'relative',\n          top: '-4px',\n          textAlign: 'center',\n        }}\n        className={'navbar-menu ' + (burgerActive ? 'is-active' : '')}\n      >\n        <div className=\"navbar-end\">\n          <NavBarItem text=\"Subscribe\" href=\"#/\" />\n          <NavBarItem text=\"FAQ\" href=\"#/faq\" />\n          {!store.customerToken && <NavBarItem text=\"Log In\" href=\"#/login\" />}\n          {store.customerToken && (\n            <NavBarItem text=\"Log Out\" onClick={logOut} />\n          )}\n          {store.customerToken && (\n            <NavBarItem text=\"My Account\" href=\"#/myaccount\" />\n          )}\n        </div>\n      </div>\n    </nav>\n  )\n})\n\nexport default NavBar\n","import React, { useContext, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport AccountStore from '../../stores/AccountStore'\n\n/**\n * ForgotPasswordForm observes AccountStore\n * It calls the `store.recover(email)` to send a password recovery email to the user.\n *\n */\nexport const ForgotPasswordForm = observer(props => {\n  const store = useContext(AccountStore)\n\n  const [email, setEmail] = useState('')\n  const [complete, setComplete] = useState(false)\n\n  const handleSubmit = async event => {\n    event.preventDefault()\n    console.log(email)\n    await store.recover(email)\n    setComplete(true)\n    setTimeout(() => {\n      setComplete(false)\n    }, 3000)\n  }\n\n  return (\n    <form onSubmit={handleSubmit} style={{ maxWidth: '400px', margin: 'auto' }}>\n      {complete && (\n        <p className=\"is-info\" style={{ marginBottom: '10px' }}>\n          A password reset email has been sent to {email}\n        </p>\n      )}\n      <div className=\"field\">\n        <input\n          className=\"input\"\n          type=\"email\"\n          id=\"recoveryEmail\"\n          placeholder=\"Email\"\n          onChange={event => {\n            setEmail(event.target.value)\n          }}\n        />\n      </div>\n      <div className=\"field\">\n        <input\n          className=\"button is-info\"\n          type=\"submit\"\n          value=\"Recover Account\"\n        />\n      </div>\n    </form>\n  )\n})\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { NavBar } from './NavBar'\nimport { ForgotPasswordForm } from './Account/ForgotPasswordForm'\n\n/**\n * ForgotPassword\n *\n * Contains `ForgotPasswordForm` along with other markup\n * (callout, Cancel etc)\n *\n * Also contains a '<Navbar>'\n *\n * Only renderd on route `/forgot-password`\n */\nexport const ForgotPassword = observer(() => (\n  <div className=\"container has-text-centered\">\n    <NavBar />\n    <div>\n      <h1 style={{ fontSize: '36px' }}>Forgot Your Password?</h1>\n      <p>\n        Enter your email address and we will send you a link to reset your\n        password.\n      </p>\n      <br />\n      <ForgotPasswordForm />\n      <br />\n      <a href=\"/#/login\">Cancel</a>\n    </div>\n  </div>\n))\n\nexport default ForgotPassword\n"],"sourceRoot":""}