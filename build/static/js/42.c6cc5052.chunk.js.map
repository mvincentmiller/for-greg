{"version":3,"sources":["components/Checkout/BuyButton.js","components/Checkout/PaymentInfo.js"],"names":["BuyButton","observer","className","type","value","style","marginBottom","console","log","REACT_APP_STRIPE_KEY","CardForm","injectStripe","props","store","useContext","CheckoutStore","onSubmit","event","preventDefault","stripe","createToken","then","response","token","checkoutProcess","id","marginTop","PaymentInfo","useState","setStripe","useEffect","window","Stripe","document","querySelector","addEventListener"],"mappings":"mIAAA,mCAQMA,EAAYC,aAAS,kBACzB,yBAAKC,UAAU,qBACb,2BACEC,KAAK,SACLC,MAAM,UACNF,UAAU,oBACVG,MAAO,CAAEC,aAAc,cAKdN,a,4GCNfO,QAAQC,IAAIC,KAQZ,IAAMC,EAAWT,YACfU,wBAAa,SAAAC,GACX,IAAMC,EAAQC,qBAAWC,KAazB,OACE,0BAAMC,SAZS,SAAAC,GACfA,EAAMC,iBACFN,EAAMO,QACRP,EAAMO,OAAOC,cAAcC,MAAK,SAAAC,GAC1BA,EAASC,OACXV,EAAMW,gBAAgBF,EAASC,MAAME,SAQzC,yBAAKvB,UAAU,OACb,4CACA,wBAAIG,MAAO,CAAEqB,UAAW,SACxB,kBAAC,cAAD,OAEF,kBAAC,UAAD,WA+BOC,UAzBK,WAAO,IAAD,EACIC,mBAAS,MADb,mBACjBT,EADiB,KACTU,EADS,KAYxB,OAVAC,qBAAU,WACJC,OAAOC,OACTH,EAAUE,OAAOC,OAAOvB,MAExBwB,SAASC,cAAc,cAAcC,iBAAiB,QAAQ,WAE5DN,EAAUE,OAAOC,OAAOvB,WAG3B,IACY,OAAXU,EACK,gDAGL,kBAAC,iBAAD,CAAgBA,OAAQA,GACtB,kBAAC,WAAD,KACE,kBAACT,EAAD,CAAUS,OAAQA","file":"static/js/42.c6cc5052.chunk.js","sourcesContent":["import React from 'react'\nimport { observer } from 'mobx-react'\n\n/**\n * BuyButton\n * A submit button that submits the whole checkout form to the store\n * handled in a higher order component.\n *  */\nconst BuyButton = observer(() => (\n  <div className=\"has-text-centered\">\n    <input\n      type=\"submit\"\n      value=\"Pay Now\"\n      className=\"button is-success\"\n      style={{ marginBottom: '20px' }}\n    />\n  </div>\n))\n\nexport default BuyButton\n","import React, { useContext, useState, useEffect } from 'react'\nimport { observer } from 'mobx-react'\n\nimport {\n  CardElement,\n  StripeProvider,\n  Elements,\n  injectStripe,\n} from 'react-stripe-elements'\n\nimport BuyButton from './BuyButton'\nimport CheckoutStore from '../../stores/CheckoutStore'\nimport { REACT_APP_STRIPE_KEY } from '../../shop-config'\nconsole.log(REACT_APP_STRIPE_KEY)\n\n/**\n * CardForm Observes the CheckoutStore\n *\n * CardForm Renders the CardElement (StripeElements)\n * and the BuyButton. Contains the form that the `BuyButton` submits.\n */\nconst CardForm = observer(\n  injectStripe(props => {\n    const store = useContext(CheckoutStore)\n\n    const onSubmit = event => {\n      event.preventDefault()\n      if (props.stripe) {\n        props.stripe.createToken().then(response => {\n          if (response.token) {\n            store.checkoutProcess(response.token.id)\n          }\n        })\n      }\n    }\n\n    return (\n      <form onSubmit={onSubmit}>\n        <div className=\"box\">\n          <h2>Payment Info</h2>\n          <hr style={{ marginTop: '5px' }} />\n          <CardElement />\n        </div>\n        <BuyButton />\n      </form>\n    )\n  })\n)\n\nconst PaymentInfo = () => {\n  const [stripe, setStripe] = useState(null)\n  useEffect(() => {\n    if (window.Stripe) {\n      setStripe(window.Stripe(REACT_APP_STRIPE_KEY))\n    } else {\n      document.querySelector('#stripe-js').addEventListener('load', () => {\n        // Create Stripe instance once Stripe.js loads\n        setStripe(window.Stripe(REACT_APP_STRIPE_KEY))\n      })\n    }\n  }, [])\n  if (stripe === null) {\n    return <p>Loading Stripe...</p>\n  } else {\n    return (\n      <StripeProvider stripe={stripe}>\n        <Elements>\n          <CardForm stripe={stripe} />\n        </Elements>\n      </StripeProvider>\n    )\n  }\n}\n\nexport default PaymentInfo\n"],"sourceRoot":""}