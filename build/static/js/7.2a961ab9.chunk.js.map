{"version":3,"sources":["components/Checkout/AddressInput.js","components/Checkout/BuyButton.js","components/Checkout/DiscountCode.js","components/General/Loading.js","components/Checkout/BillingAddress.js","components/Checkout/Email.js","components/Checkout/OrderSummary.js","components/Checkout/PaymentInfo.js","components/Checkout/ShippingAddress.js","components/Checkout.js"],"names":["AddressInput","observer","props","store","useContext","CheckoutStore","className","type","id","name","placeholder","defaultValue","AddressObject","onBlur","event","set","target","value","updateAddress","BuyButton","style","marginBottom","DiscountCode","useState","discountCode","setDiscount","errors","indexOf","fontSize","onChange","minWidth","maxWidth","onClick","updateDiscountCode","Loading","alt","width","margin","src","imageUrl","BillingAddress","addressType","marginTop","defaultChecked","sameAsShipping","Email","handleEmail","a","updateEmail","checkout","email","Prices","backgroundColor","moneyFormat","subtotalPrice","totalTax","discountAmount","totalPrice","LineItem","item","image","title","properties","map","property","key","price","OrderSummary","lineItems","variantId","console","log","REACT_APP_STRIPE_KEY","CardForm","injectStripe","onSubmit","preventDefault","stripe","createToken","then","response","token","checkoutProcess","PaymentInfo","setStripe","useEffect","window","Stripe","document","querySelector","addEventListener","ShippingAddress","Checkout","padding","paddingBottom","processing"],"mappings":"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","file":"static/js/7.2a961ab9.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\n\nimport CheckoutStore from '../../stores/CheckoutStore'\n/**\n * AddressInput observes the CheckoutStore\n *\n * AddressInput takes user input and then updates the billing address first\n * on the store then it runs the funciton `store.updateAddress()` that then\n * calls a mutation on the server.\n */\nexport const AddressInput = observer(props => {\n  const store = useContext(CheckoutStore)\n  return (\n    <div className=\"field\">\n      <input\n        className=\"input\"\n        type=\"text\"\n        id={props.name}\n        placeholder={props.placeholder}\n        defaultValue={\n          store[props.AddressObject] && store[props.AddressObject][props.name]\n        }\n        onBlur={event => {\n          store[props.AddressObject].set(props.name, event.target.value)\n          store.updateAddress()\n        }}\n      />\n    </div>\n  )\n})\n","import React from 'react'\nimport { observer } from 'mobx-react'\n\n/**\n * BuyButton\n * A submit button that submits the whole checkout form to the store\n * handled in a higher order component.\n *  */\nconst BuyButton = observer(() => (\n  <div className=\"has-text-centered\">\n    <input\n      type=\"submit\"\n      value=\"Pay Now\"\n      className=\"button is-success\"\n      style={{ marginBottom: '20px' }}\n    />\n  </div>\n))\n\nexport default BuyButton\n","import React, { useContext, useState } from 'react'\nimport { observer } from 'mobx-react'\n\nimport CheckoutStore from '../../stores/CheckoutStore'\n\n/**\n * Discount Code observes the CheckoutStore\n *\n * Adds a Discount Code to the current checkout.\n */\nconst DiscountCode = observer(() => {\n  const store = useContext(CheckoutStore)\n\n  const [discountCode, setDiscount] = useState('')\n\n  const onClick = () => {\n    store.updateDiscountCode(discountCode)\n  }\n\n  return (\n    <div>\n      <h3 style={{ marginBottom: '10px' }}>\n        Have a Discount Code? Enter it here!\n      </h3>\n      {store.errors !== null && store.errors.indexOf('discount') !== -1 && (\n        <p\n          className=\"has-text-danger\"\n          style={{ fontSize: '14px', marginBottom: '10px' }}\n        >\n          Discount not found\n        </p>\n      )}\n      <div className=\"columns\">\n        <div className=\"column is-8\">\n          <input\n            className=\"input\"\n            name=\"discountCode\"\n            onBlur={() => {}}\n            placeholder=\"Discount Code\"\n            defaultValue={discountCode}\n            onChange={event => {\n              setDiscount(event.target.value)\n            }}\n          />\n        </div>\n        <div className=\"column is-4\">\n          <input\n            type=\"submit\"\n            className=\"button is-info\"\n            style={{ minWidth: '100%', maxWidth: '100%' }}\n            value=\"Apply\"\n            onClick={onClick}\n          />\n        </div>\n      </div>\n    </div>\n  )\n})\n\nexport default DiscountCode\n","import React from 'react'\nimport PropTypes from 'prop-types'\n/**\n * A simple loading weel\n * Renders a simple loading.gif from a CDN\n *\n */\nexport const Loading = props => (\n  <div className=\"has-text-centered\">\n    <h1>One moment...</h1>\n    <img\n      alt=\"loading\"\n      style={{ width: '120px', margin: '40px' }}\n      src={\n        props.imageUrl\n          ? props.imageUrl\n          : 'https://assets.bulubox.com/loading.gif'\n      }\n    />\n  </div>\n)\nLoading.propTypes = {\n  imageUrl: PropTypes.string,\n}\n\nexport default Loading\n","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\n\nimport CheckoutStore from '../../stores/CheckoutStore'\nimport { AddressInput } from './AddressInput'\n/**\n * BillingAddress observes the CheckoutStore\n *\n * BillingAddress contains many AddressInput fields to comprise\n * a larger billing address. Each Address input is identifed by the\n * `name` peramiter.\n *\n * There is also another bulma box that includes a checkbox for shipping address\n * when un checked a bool is set in the store `sameAsShipping` that then will display\n * a shipping address field when unchecked.\n *\n */\nconst BillingAddress = observer(() => {\n  const store = useContext(CheckoutStore)\n  const addressType = 'billingAddress'\n  return (\n    <div className=\"box\">\n      <h2>Billing Address</h2>\n      <hr style={{ marginTop: '5px' }} />\n      <label>\n        <input\n          type=\"checkbox\"\n          defaultChecked={store.sameAsShipping}\n          onClick={() => {\n            store.set('sameAsShipping', !store.sameAsShipping)\n          }}\n        />\n        &nbsp;Same as Shipping Address\n      </label>\n\n      {!store.sameAsShipping && (\n        <div>\n          <AddressInput\n            AddressObject={addressType}\n            name={'name'}\n            placeholder={'Name'}\n          />\n          <AddressInput\n            AddressObject={addressType}\n            name={'address1'}\n            placeholder={'Address'}\n          />\n          <AddressInput\n            AddressObject={addressType}\n            name={'address2'}\n            placeholder={'Address Line 2'}\n          />\n          <div className=\"columns\">\n            <div className=\"column is-5\">\n              <AddressInput\n                AddressObject={addressType}\n                name={'city'}\n                placeholder={'City'}\n              />\n            </div>\n            <div className=\"column is-4\">\n              <AddressInput\n                AddressObject={addressType}\n                name={'state'}\n                placeholder={'State'}\n              />\n            </div>\n            <div className=\"column is-3\">\n              <AddressInput\n                AddressObject={addressType}\n                name={'zipcode'}\n                placeholder={'Zipcode'}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n})\n\nexport default BillingAddress\n","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\n\nimport CheckoutStore from '../../stores/CheckoutStore'\n\n/**\n * Email observes the CheckoutStore\n * Simpley sets the email and updates the email\n * on the server via the checkout Mutation.\n */\nconst Email = observer(() => {\n  const store = useContext(CheckoutStore)\n  const handleEmail = async event => {\n    store.updateEmail(event.target.value)\n  }\n  return (\n    <div className=\"box\">\n      <h2>Email</h2>\n      <hr style={{ marginTop: '5px' }} />\n      <input\n        className=\"input\"\n        type=\"email\"\n        id=\"email\"\n        placeholder=\"Email\"\n        defaultValue={store.checkout.email}\n        onBlur={handleEmail}\n      />\n    </div>\n  )\n})\n\nexport default Email\n","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\n\nimport DiscountCode from './DiscountCode'\n\nimport CheckoutStore from '../../stores/CheckoutStore'\n\n/**\n * Prices observes the CheckoutStore\n *\n * Prices renders the current checkout totals.\n */\n\nexport const Prices = observer(props => {\n  const store = useContext(CheckoutStore)\n  const checkout = props.checkout\n  return (\n    <table\n      className=\"table\"\n      style={{ width: '100%', backgroundColor: '#fcfcfc' }}\n    >\n      <tbody>\n        <tr>\n          <td>Subtotal</td>\n          <td className=\"has-text-right\">\n            {store.moneyFormat(checkout.subtotalPrice)}\n          </td>\n        </tr>\n        {checkout.totalTax !== null && (\n          <tr>\n            <td>Tax</td>\n            <td className=\"has-text-right\">\n              {store.moneyFormat(checkout.totalTax)}\n            </td>\n          </tr>\n        )}\n        {checkout.discountCode !== null && (\n          <tr>\n            <td>Discount ({checkout.discountCode})</td>\n            <td className=\"has-text-right\">\n              {checkout.discountAmount !== 0 && (\n                <span>{store.moneyFormat(-checkout.discountAmount)}</span>\n              )}\n            </td>\n          </tr>\n        )}\n        <tr>\n          <td>\n            <b>Total</b>\n          </td>\n          <td className=\"has-text-right\">\n            <b>{store.moneyFormat(checkout.totalPrice)}</b>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  )\n})\n\nconst LineItem = observer(props => {\n  const store = useContext(CheckoutStore)\n  return (\n    <div className=\"columns is-vcentered\">\n      <div className=\"column is-3\">\n        <img alt=\"line-item\" src={props.item.image} />\n      </div>\n      <div className=\"column is-6\">\n        <p>{props.item.title}</p>\n        {props.item.properties.map(property => (\n          <p style={{ fontSize: '12px' }}>\n            {property.key}: {property.value}\n          </p>\n        ))}\n      </div>\n      <div className=\"column is-3 has-text-right\">\n        <p>{store.moneyFormat(props.item.price)}</p>\n      </div>\n    </div>\n  )\n})\n\nconst OrderSummary = observer(() => {\n  const store = useContext(CheckoutStore)\n  return (\n    <div className=\"box\">\n      <h2>Order Summary</h2>\n      <hr style={{ marginTop: '5px' }} />\n      {store.checkout.lineItems.map(item => (\n        <LineItem item={item} key={item.variantId} />\n      ))}\n      <hr />\n      <DiscountCode />\n      <hr />\n      <Prices checkout={store.checkout} />\n    </div>\n  )\n})\n\nexport default OrderSummary\n","import React, { useContext, useState, useEffect } from 'react'\nimport { observer } from 'mobx-react'\n\nimport {\n  CardElement,\n  StripeProvider,\n  Elements,\n  injectStripe,\n} from 'react-stripe-elements'\n\nimport BuyButton from './BuyButton'\nimport CheckoutStore from '../../stores/CheckoutStore'\nimport { REACT_APP_STRIPE_KEY } from '../../shop-config'\nconsole.log(REACT_APP_STRIPE_KEY)\n\n/**\n * CardForm Observes the CheckoutStore\n *\n * CardForm Renders the CardElement (StripeElements)\n * and the BuyButton. Contains the form that the `BuyButton` submits.\n */\nconst CardForm = observer(\n  injectStripe(props => {\n    const store = useContext(CheckoutStore)\n\n    const onSubmit = event => {\n      event.preventDefault()\n      if (props.stripe) {\n        props.stripe.createToken().then(response => {\n          if (response.token) {\n            store.checkoutProcess(response.token.id)\n          }\n        })\n      }\n    }\n\n    return (\n      <form onSubmit={onSubmit}>\n        <div className=\"box\">\n          <h2>Payment Info</h2>\n          <hr style={{ marginTop: '5px' }} />\n          <CardElement />\n        </div>\n        <BuyButton />\n      </form>\n    )\n  })\n)\n\nconst PaymentInfo = () => {\n  const [stripe, setStripe] = useState(null)\n  useEffect(() => {\n    if (window.Stripe) {\n      setStripe(window.Stripe(REACT_APP_STRIPE_KEY))\n    } else {\n      document.querySelector('#stripe-js').addEventListener('load', () => {\n        // Create Stripe instance once Stripe.js loads\n        setStripe(window.Stripe(REACT_APP_STRIPE_KEY))\n      })\n    }\n  }, [])\n  if (stripe === null) {\n    return <p>Loading Stripe...</p>\n  } else {\n    return (\n      <StripeProvider stripe={stripe}>\n        <Elements>\n          <CardForm stripe={stripe} />\n        </Elements>\n      </StripeProvider>\n    )\n  }\n}\n\nexport default PaymentInfo\n","import React from 'react'\nimport { observer } from 'mobx-react'\n\nimport { AddressInput } from './AddressInput'\n\n/**\n * ShippingAddress observes the CheckoutStore\n *\n * ShippingAddress contains many AddressInput fields to comprise\n * a larger shipping address. Each Address input is identifed by the\n * `name` peram.\n *\n */\n\nconst ShippingAddress = observer(() => {\n  const addressType = 'shippingAddress'\n\n  return (\n    <div className=\"box\">\n      <h2>Shipping Address</h2>\n      <hr style={{ marginTop: '5px' }} />\n\n      <AddressInput\n        AddressObject={addressType}\n        name={'name'}\n        placeholder={'Name'}\n      />\n      <AddressInput\n        AddressObject={addressType}\n        name={'address1'}\n        placeholder={'Address'}\n      />\n      <AddressInput\n        AddressObject={addressType}\n        name={'address2'}\n        placeholder={'Address Line 2'}\n      />\n      <div className=\"columns\">\n        <div className=\"column is-5\">\n          <AddressInput\n            AddressObject={addressType}\n            name={'city'}\n            placeholder={'City'}\n          />\n        </div>\n        <div className=\"column is-4\">\n          <AddressInput\n            AddressObject={addressType}\n            name={'state'}\n            placeholder={'State'}\n          />\n        </div>\n        <div className=\"column is-3\">\n          <AddressInput\n            AddressObject={addressType}\n            name={'zipcode'}\n            placeholder={'Zipcode'}\n          />\n        </div>\n      </div>\n    </div>\n  )\n})\n\nexport default ShippingAddress\n","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\nimport Loading from './General/Loading'\nimport BillingAddress from './Checkout/BillingAddress'\nimport Email from './Checkout/Email'\nimport OrderSummary from './Checkout/OrderSummary'\nimport PaymentInfo from './Checkout/PaymentInfo'\nimport ShippingAddress from './Checkout/ShippingAddress'\n\nimport CheckoutStore from '../stores/CheckoutStore'\n\n/**\n * Checkout observes ThingStore, CheckoutStore\n *\n * Contains all the relevent components for Checkout\n *\n * Before:\n *  - Loading\n *\n * Durring:\n *  - Email\n *  - ShippingAddress\n *  - BillingAddress\n *  - PaymentInfo\n *  - Order Summary\n *\n */\n\nexport const Checkout = observer(() => {\n  const store = useContext(CheckoutStore)\n\n  return (\n    <div style={{ backgroundColor: '#f3f3f3' }}>\n      <div\n        className=\"container\"\n        style={{ maxWidth: '1000px', padding: '20px' }}\n      >\n        <img\n          alt=\"logo\"\n          style={{ width: '80px', paddingBottom: '20px' }}\n          src=\"https://assets.bulubox.com/assets/bulugroup-logo.png\"\n        />\n        {!store.checkout ||\n          (store.processing && (\n            <div className=\"columns\">\n              <div className=\"column is-12\">\n                <div className=\"box has-text-centered\">\n                  <Loading />\n                </div>\n              </div>\n            </div>\n          ))}\n        {store.checkout && !store.processing && (\n          <div className=\"columns\">\n            <div className=\"column is-7\">\n              <Email />\n              <ShippingAddress />\n              <BillingAddress />\n              <PaymentInfo />\n            </div>\n            <div className=\"column is-5\">\n              <OrderSummary />\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n})\n\nexport default Checkout\n"],"sourceRoot":""}