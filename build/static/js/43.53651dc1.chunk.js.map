{"version":3,"sources":["components/Checkout/DiscountCode.js","components/Checkout/OrderSummary.js"],"names":["DiscountCode","observer","store","useContext","CheckoutStore","useState","discountCode","setDiscount","style","marginBottom","errors","indexOf","className","fontSize","name","onBlur","placeholder","defaultValue","onChange","event","target","value","type","minWidth","maxWidth","onClick","updateDiscountCode","Prices","props","checkout","width","backgroundColor","moneyFormat","subtotalPrice","totalTax","discountAmount","totalPrice","LineItem","alt","src","item","image","title","properties","map","property","key","price","OrderSummary","marginTop","lineItems","variantId"],"mappings":"sLAUMA,EAAeC,aAAS,WAC5B,IAAMC,EAAQC,qBAAWC,KADS,EAGEC,mBAAS,IAHX,mBAG3BC,EAH2B,KAGbC,EAHa,KASlC,OACE,6BACE,wBAAIC,MAAO,CAAEC,aAAc,SAA3B,wCAGkB,OAAjBP,EAAMQ,SAAyD,IAAtCR,EAAMQ,OAAOC,QAAQ,aAC7C,uBACEC,UAAU,kBACVJ,MAAO,CAAEK,SAAU,OAAQJ,aAAc,SAF3C,sBAOF,yBAAKG,UAAU,WACb,yBAAKA,UAAU,eACb,2BACEA,UAAU,QACVE,KAAK,eACLC,OAAQ,aACRC,YAAY,gBACZC,aAAcX,EACdY,SAAU,SAAAC,GACRZ,EAAYY,EAAMC,OAAOC,WAI/B,yBAAKT,UAAU,eACb,2BACEU,KAAK,SACLV,UAAU,iBACVJ,MAAO,CAAEe,SAAU,OAAQC,SAAU,QACrCH,MAAM,QACNI,QApCM,WACdvB,EAAMwB,mBAAmBpB,YA2CdN,a,gCC3Df,0FAaa2B,EAAS1B,aAAS,SAAA2B,GAC7B,IAAM1B,EAAQC,qBAAWC,KACnByB,EAAWD,EAAMC,SACvB,OACE,2BACEjB,UAAU,QACVJ,MAAO,CAAEsB,MAAO,OAAQC,gBAAiB,YAEzC,+BACE,4BACE,wCACA,wBAAInB,UAAU,kBACXV,EAAM8B,YAAYH,EAASI,iBAGT,OAAtBJ,EAASK,UACR,4BACE,mCACA,wBAAItB,UAAU,kBACXV,EAAM8B,YAAYH,EAASK,YAIP,OAA1BL,EAASvB,cACR,4BACE,yCAAeuB,EAASvB,aAAxB,KACA,wBAAIM,UAAU,kBACiB,IAA5BiB,EAASM,gBACR,8BAAOjC,EAAM8B,aAAaH,EAASM,mBAK3C,4BACE,4BACE,qCAEF,wBAAIvB,UAAU,kBACZ,2BAAIV,EAAM8B,YAAYH,EAASO,oBAQrCC,EAAWpC,aAAS,SAAA2B,GACxB,IAAM1B,EAAQC,qBAAWC,KACzB,OACE,yBAAKQ,UAAU,wBACb,yBAAKA,UAAU,eACb,yBAAK0B,IAAI,YAAYC,IAAKX,EAAMY,KAAKC,SAEvC,yBAAK7B,UAAU,eACb,2BAAIgB,EAAMY,KAAKE,OACdd,EAAMY,KAAKG,WAAWC,KAAI,SAAAC,GAAQ,OACjC,uBAAGrC,MAAO,CAAEK,SAAU,SACnBgC,EAASC,IADZ,KACmBD,EAASxB,WAIhC,yBAAKT,UAAU,8BACb,2BAAIV,EAAM8B,YAAYJ,EAAMY,KAAKO,aAMnCC,EAAe/C,aAAS,WAC5B,IAAMC,EAAQC,qBAAWC,KACzB,OACE,yBAAKQ,UAAU,OACb,6CACA,wBAAIJ,MAAO,CAAEyC,UAAW,SACvB/C,EAAM2B,SAASqB,UAAUN,KAAI,SAAAJ,GAAI,OAChC,kBAACH,EAAD,CAAUG,KAAMA,EAAMM,IAAKN,EAAKW,eAElC,6BACA,kBAAC,UAAD,MACA,6BACA,kBAACxB,EAAD,CAAQE,SAAU3B,EAAM2B,eAKfmB","file":"static/js/43.53651dc1.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react'\nimport { observer } from 'mobx-react'\n\nimport CheckoutStore from '../../stores/CheckoutStore'\n\n/**\n * Discount Code observes the CheckoutStore\n *\n * Adds a Discount Code to the current checkout.\n */\nconst DiscountCode = observer(() => {\n  const store = useContext(CheckoutStore)\n\n  const [discountCode, setDiscount] = useState('')\n\n  const onClick = () => {\n    store.updateDiscountCode(discountCode)\n  }\n\n  return (\n    <div>\n      <h3 style={{ marginBottom: '10px' }}>\n        Have a Discount Code? Enter it here!\n      </h3>\n      {store.errors !== null && store.errors.indexOf('discount') !== -1 && (\n        <p\n          className=\"has-text-danger\"\n          style={{ fontSize: '14px', marginBottom: '10px' }}\n        >\n          Discount not found\n        </p>\n      )}\n      <div className=\"columns\">\n        <div className=\"column is-8\">\n          <input\n            className=\"input\"\n            name=\"discountCode\"\n            onBlur={() => {}}\n            placeholder=\"Discount Code\"\n            defaultValue={discountCode}\n            onChange={event => {\n              setDiscount(event.target.value)\n            }}\n          />\n        </div>\n        <div className=\"column is-4\">\n          <input\n            type=\"submit\"\n            className=\"button is-info\"\n            style={{ minWidth: '100%', maxWidth: '100%' }}\n            value=\"Apply\"\n            onClick={onClick}\n          />\n        </div>\n      </div>\n    </div>\n  )\n})\n\nexport default DiscountCode\n","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\n\nimport DiscountCode from './DiscountCode'\n\nimport CheckoutStore from '../../stores/CheckoutStore'\n\n/**\n * Prices observes the CheckoutStore\n *\n * Prices renders the current checkout totals.\n */\n\nexport const Prices = observer(props => {\n  const store = useContext(CheckoutStore)\n  const checkout = props.checkout\n  return (\n    <table\n      className=\"table\"\n      style={{ width: '100%', backgroundColor: '#fcfcfc' }}\n    >\n      <tbody>\n        <tr>\n          <td>Subtotal</td>\n          <td className=\"has-text-right\">\n            {store.moneyFormat(checkout.subtotalPrice)}\n          </td>\n        </tr>\n        {checkout.totalTax !== null && (\n          <tr>\n            <td>Tax</td>\n            <td className=\"has-text-right\">\n              {store.moneyFormat(checkout.totalTax)}\n            </td>\n          </tr>\n        )}\n        {checkout.discountCode !== null && (\n          <tr>\n            <td>Discount ({checkout.discountCode})</td>\n            <td className=\"has-text-right\">\n              {checkout.discountAmount !== 0 && (\n                <span>{store.moneyFormat(-checkout.discountAmount)}</span>\n              )}\n            </td>\n          </tr>\n        )}\n        <tr>\n          <td>\n            <b>Total</b>\n          </td>\n          <td className=\"has-text-right\">\n            <b>{store.moneyFormat(checkout.totalPrice)}</b>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  )\n})\n\nconst LineItem = observer(props => {\n  const store = useContext(CheckoutStore)\n  return (\n    <div className=\"columns is-vcentered\">\n      <div className=\"column is-3\">\n        <img alt=\"line-item\" src={props.item.image} />\n      </div>\n      <div className=\"column is-6\">\n        <p>{props.item.title}</p>\n        {props.item.properties.map(property => (\n          <p style={{ fontSize: '12px' }}>\n            {property.key}: {property.value}\n          </p>\n        ))}\n      </div>\n      <div className=\"column is-3 has-text-right\">\n        <p>{store.moneyFormat(props.item.price)}</p>\n      </div>\n    </div>\n  )\n})\n\nconst OrderSummary = observer(() => {\n  const store = useContext(CheckoutStore)\n  return (\n    <div className=\"box\">\n      <h2>Order Summary</h2>\n      <hr style={{ marginTop: '5px' }} />\n      {store.checkout.lineItems.map(item => (\n        <LineItem item={item} key={item.variantId} />\n      ))}\n      <hr />\n      <DiscountCode />\n      <hr />\n      <Prices checkout={store.checkout} />\n    </div>\n  )\n})\n\nexport default OrderSummary\n"],"sourceRoot":""}