{"version":3,"sources":["styles/AccountInfo.module.scss","components/Account/EditPassword.js","components/Account/EditName.js","components/Account/EditEmail.js","components/Account/AccountInformation.js"],"names":["module","exports","EditPassword","observer","props","store","useContext","AccountStore","useState","newPassword","setNewPassword","passwordConfirm","setPasswordConfirm","renderForm","setRenderForm","handleChange","event","target","id","value","preventDefault","handleSubmit","a","setPassword","className","onClick","poochInput","type","placeholder","onChange","href","disabled","length","EditName","set","style","width","margin","EditEmail","AccountInformation","showForm","setShowForm","handleForm","updateUser","background","padding","accountSectionHeader","accountSubSectionHeader","customer","name","email","Link","addr","e","newEmail","test","n","firstName","lastName","validateForm"],"mappings":"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","file":"static/js/11.eae01063.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"accountPageHeader\":\"AccountInfo_accountPageHeader__3PT-I\",\"accountSectionHeader\":\"AccountInfo_accountSectionHeader__u8Du1\",\"accountSubSectionHeader\":\"AccountInfo_accountSubSectionHeader__rUWSb\",\"Link\":\"AccountInfo_Link__1OAI7\",\"poochInput\":\"AccountInfo_poochInput__1AR4z\",\"poochButton\":\"AccountInfo_poochButton__3soeJ\",\"stripeElementsInput\":\"AccountInfo_stripeElementsInput__21gKf\",\"StripeElement\":\"AccountInfo_StripeElement__1q-TZ\"};","import React, { useContext, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport AccountStore from '../../stores/AccountStore'\nimport { poochInput } from '../../styles/AccountInfo.module.scss'\n\n/**\n * EditPassword observes the AccountStore\n * It should not change the state of AccountStore.\n * It should update the password of a user when they are logged in\n * So It may need to be aware of a session\n *\n */\n\nexport const EditPassword = observer(props => {\n  const store = useContext(AccountStore)\n  //console.log(props)\n\n  const [newPassword, setNewPassword] = useState('')\n  const [passwordConfirm, setPasswordConfirm] = useState('')\n  const [renderForm, setRenderForm] = useState(false)\n\n  const validateForm = () => {\n    return (\n      newPassword === passwordConfirm &&\n      newPassword.length !== 0 &&\n      passwordConfirm.length !== 0\n    )\n  }\n\n  const handleChange = event => {\n    if (event.target.id === 'editPassword') {\n      setNewPassword(event.target.value)\n    } else if (event.target.id === 'editPasswordConfirm') {\n      setPasswordConfirm(event.target.value)\n    } else if (event.target.id === 'changePassword') {\n      event.preventDefault()\n      setRenderForm(!renderForm)\n    }\n  }\n\n  const handleSubmit = async event => {\n    event.preventDefault()\n    await store.setPassword(newPassword)\n    setRenderForm(false)\n    //window.location.hash = '/';\n  }\n\n  return (\n    <div>\n      {!renderForm && (\n        <button className=\"a11y\" onClick={handleChange} id=\"changePassword\">\n          {' '}\n          Change Password\n        </button>\n      )}\n      {renderForm && (\n        <div>\n          <div className=\"field\">\n            <p className=\"control\">\n              <input\n                className={'input ' + poochInput}\n                type=\"password\"\n                id=\"editPassword\"\n                placeholder=\"New Password\"\n                onChange={handleChange}\n              />\n            </p>\n          </div>\n          <div className=\"field\">\n            <p className=\"control\">\n              <input\n                className={'input ' + poochInput}\n                type=\"password\"\n                id=\"editPasswordConfirm\"\n                placeholder=\"Re-Enter Password\"\n                onChange={handleChange}\n              />\n            </p>\n            <div />\n          </div>\n          <div className=\"field is-grouped\">\n            <p className=\"control is-expanded\">\n              {/* eslint-disable-next-line */}\n              <button\n                href=\"#\"\n                className=\"button a11y\"\n                onClick={handleChange}\n                id=\"changePassword\"\n              >\n                Cancel\n              </button>\n            </p>\n            <p className=\"control\">\n              <button\n                className=\"button btn-orange\"\n                disabled={!validateForm()}\n                type=\"submit\"\n                onClick={handleSubmit}\n              >\n                Update Password\n              </button>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n})\n","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\nimport AccountStore from '../../stores/AccountStore'\nimport { poochInput } from '../../styles/AccountInfo.module.scss'\n\n/**\n * EditName observes AccountStore\n * Edits Only the name portion of the account edit\n *\n */\n\nexport const EditName = observer(props => {\n  const store = useContext(AccountStore)\n\n  const handleChange = async event => {\n    store.set(event.target.id, event.target.value)\n  }\n\n  return (\n    <div style={{ width: '100%', margin: '0 auto' }}>\n      <div className=\"field-body\">\n        <div className=\"field\">\n          <p className=\"control\">\n            <input\n              className={'input ' + poochInput}\n              type=\"text\"\n              id=\"firstName\"\n              placeholder=\"First Name\"\n              onChange={handleChange}\n            />\n          </p>\n        </div>\n        <div className=\"field\">\n          <p className=\"control\">\n            <input\n              className={'input ' + poochInput}\n              type=\"text\"\n              id=\"lastName\"\n              placeholder=\"Last Name\"\n              onChange={handleChange}\n            />\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n})\n","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\nimport AccountStore from '../../stores/AccountStore'\nimport { poochInput } from '../../styles/AccountInfo.module.scss'\n\n/**\n * Edits email and also updates the rest of the fields\n * Field that updates the email field.\n *\n */\n\nexport const EditEmail = observer(props => {\n  const store = useContext(AccountStore)\n\n  const handleChange = async event => {\n    store.set(event.target.id, event.target.value)\n  }\n\n  return (\n    <div className=\"field\">\n      <p className=\"control\">\n        <input\n          className={'input ' + poochInput}\n          type=\"text\"\n          id=\"newEmail\"\n          placeholder=\"Email\"\n          onChange={handleChange}\n        />\n      </p>\n    </div>\n  )\n})\n","import React, { useContext, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport AccountStore from '../../stores/AccountStore'\nimport { EditPassword } from './EditPassword'\nimport { EditName } from './EditName'\nimport { EditEmail } from './EditEmail'\nimport {\n  accountSectionHeader,\n  accountSubSectionHeader,\n  Link,\n} from '../../styles/AccountInfo.module.scss'\n\n/**\n * AccountInformation observes the AccountStore\n * Displays the current account information\n * Contains the actions to the Billing Address, Card On File\n * Account Information Edit, Change Password, forms.\n *\n */\n\nexport const AccountInformation = observer(props => {\n  const store = useContext(AccountStore)\n  const [showForm, setShowForm] = useState(false)\n  const handleForm = event => {\n    event.preventDefault()\n    setShowForm(!showForm)\n  }\n\n  const handleSubmit = async event => {\n    event.preventDefault()\n    await store.updateUser()\n    setShowForm(false)\n  }\n\n  const validateEmail = addr => {\n    //eslint-disable-next-line\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(addr)) {\n      return true\n    }\n    return false\n  }\n\n  const validateForm = () => {\n    //let e = store.newEmail.length > 0\n    let e = validateEmail(store.newEmail)\n    let n = store.firstName.length > 0 && store.lastName.length > 0\n    return e && n\n  }\n\n  return (\n    <div className=\"box\" style={{ background: '#f2f2f2', padding: '1.5em' }}>\n      <h3 className={accountSectionHeader}>Account Information</h3>\n      <div className=\"columns\">\n        <div className=\"column\">\n          {!showForm && (\n            <div>\n              <div className=\"columns\">\n                <div className=\"column\">\n                  <p className={accountSubSectionHeader}>Name</p>\n                  <p> {store.customer && store.customer.name} </p>\n                </div>\n                <div className=\"column\">\n                  <p className={accountSubSectionHeader}>Email</p>\n                  <p>{store.customer && store.customer.email}</p>\n                </div>\n              </div>\n              <button className=\"a11y\" onClick={handleForm} href=\"#\">\n                {' '}\n                Edit\n              </button>\n            </div>\n          )}\n          {showForm && (\n            <div>\n              <div>\n                <p className={accountSubSectionHeader}>Name</p>\n                <EditName />\n                <p className={accountSubSectionHeader}>Email</p>\n                <EditEmail />\n              </div>\n              <div className=\"field is-grouped\" style={{ margin: '1em 0 0 0' }}>\n                <p className=\"control is-expanded\">\n                  {/*eslint-disable-next-line */}\n                  <a href=\"#\" className={Link} onClick={handleForm} href=\"#\">\n                    Cancel\n                  </a>\n                </p>\n                <p className=\"control\">\n                  <button\n                    className=\"button btn-orange\"\n                    disabled={!validateForm()}\n                    type=\"submit\"\n                    onClick={handleSubmit}\n                  >\n                    UPDATE\n                  </button>\n                </p>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"column\">\n          <p className={accountSubSectionHeader}>Password</p>\n          <EditPassword\n            showForm={() => {\n              showForm()\n            }}\n          />{' '}\n        </div>\n      </div>\n    </div>\n  )\n})\n"],"sourceRoot":""}