{"version":3,"sources":["components/SubscribeFlow/ProgressBar.js","components/SubscribeFlow/SubscribeHeader.js","components/SubscribeFlow/Two.js"],"names":["ProgressBar","observer","props","uiStore","useContext","UiStore","class","value","progress","max","SubscribeHeader","style","margin","marginTop","marginBottom","width","textAlign","background","onClick","window","location","hash","alt","src","maxHeight","Two","store","ThingStore","console","log","className","variant","productTitle","variantTitle","set","id"],"mappings":"sIAAA,uFAUaA,EAAcC,aAAS,SAAAC,GAClC,IAAMC,EAAUC,qBAAWC,KAE3B,OACE,8BAAUC,MAAM,oBAAoBC,MAAOJ,EAAQK,SAAUC,IAAI,OAC9DP,EAAMK,MADT,S,gCCdJ,2FASaG,EAAkBT,aAAS,SAAAC,GACtC,OACE,6BACE,yBACES,MAAO,CACLC,OAAQ,SACRC,UAAW,MACXC,aAAc,MACdC,MAAO,QACPC,UAAW,SACXC,WAAY,YAGd,yBACEC,QAAS,kBAAOC,OAAOC,SAASC,KAAO,KACvCC,IAAI,OACJC,IAAI,wEACJZ,MAAO,CAAEI,MAAO,OAAQH,OAAQ,SAAUY,UAAW,WAGzD,kBAAC,cAAD,CAAahB,SAAS,Y,gCC7B5B,+FAcaiB,EAAMxB,aAAS,SAAAC,GAC1B,IAAMC,EAAUC,qBAAWC,KACrBqB,EAAQtB,qBAAWuB,KACzBC,QAAQC,IAAIH,GAYZ,OADAE,QAAQC,IAAIH,GAEV,yBAAKI,UAAU,aACb,kBAAC,kBAAD,MACCJ,EAAMK,SACL,yBAAKD,UAAU,kBACb,wBAAIA,UAAU,cAAd,gBAEA,uBAAGA,UAAU,YAAYJ,EAAMK,QAAQC,cACvC,uBAAGF,UAAU,iBAAb,SAAoCJ,EAAMK,QAAQE,cAElD,4BAAQf,QArBH,WACXf,EAAQ+B,IAAI,WAAY,IACxBf,OAAOC,SAASC,KAAO,uBAAyBK,EAAMK,QAAQI,IAmBjCL,UAAU,qBAAjC,UAKFJ,EAAMK,SACN,yBAAKD,UAAU,kBACb,wBAAIA,UAAU,cAAd,SAEA,4BAAQZ,QAzBH,WACXf,EAAQ+B,IAAI,WAAY,IACxBf,OAAOC,SAASC,KAAO,kBAuBMS,UAAU,qBAAjC","file":"static/js/39.dbb39683.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\nimport UiStore from '../../stores/UiStore.js'\n\n/**\n * ProgressBar observes the UiStore\n * This progress bar (based on Bulma classes) displays the place in the subscribe flow.\n * Reads progress value from the Ui Store.\n */\n\nexport const ProgressBar = observer(props => {\n  const uiStore = useContext(UiStore)\n\n  return (\n    <progress class=\"progress is-small\" value={uiStore.progress} max=\"100\">\n      {props.value}%\n    </progress>\n  )\n})\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { ProgressBar } from './ProgressBar'\n\n/**\n * SubscribeHeader holds the progress bar.\n * TODO: Should update ProgressBar baised on route or something.\n */\n\nexport const SubscribeHeader = observer(props => {\n  return (\n    <div>\n      <div\n        style={{\n          margin: '0 auto',\n          marginTop: '2em',\n          marginBottom: '2em',\n          width: '150px',\n          textAlign: 'center',\n          background: '#fcfcfc',\n        }}\n      >\n        <img\n          onClick={() => (window.location.hash = '/')}\n          alt=\"logo\"\n          src=\"https://s3.amazonaws.com/assets.bulubox.com/assets/bulugroup-logo.png\"\n          style={{ width: '50px', margin: '0 auto', maxHeight: '53px' }}\n        />\n      </div>\n      <ProgressBar progress=\"10\" />\n    </div>\n  )\n})\n","import React, { useContext } from 'react'\nimport { observer } from 'mobx-react'\nimport UiStore from '../../stores/UiStore'\nimport { SubscribeHeader } from './SubscribeHeader.js'\nimport ThingStore from '../../stores/ThingStore.js'\n\n/**\n * Two observes UiStore, ThingStore\n * This is the second step in the subscribe flow.\n *\n * TODO: Create SubscribeFlowStore etc..\n *\n * */\n\nexport const Two = observer(props => {\n  const uiStore = useContext(UiStore)\n  const store = useContext(ThingStore)\n  console.log(store)\n  const next = () => {\n    uiStore.set('progress', 90)\n    window.location.hash = '/checkout?variantId=' + store.variant.id\n  }\n\n  const back = () => {\n    uiStore.set('progress', 30)\n    window.location.hash = '/subscribe/one'\n  }\n\n  console.log(store)\n  return (\n    <div className=\"subscribe\">\n      <SubscribeHeader />\n      {store.variant && (\n        <div className=\"subscribeInner\">\n          <h1 className=\"title is-2\">This, right?</h1>\n\n          <p className=\"subtitle\">{store.variant.productTitle}</p>\n          <p className=\"subtitle is-6\">Size: {store.variant.variantTitle}</p>\n\n          <button onClick={next} className=\"button is-primary\">\n            NEXT\n          </button>\n        </div>\n      )}\n      {!store.variant && (\n        <div className=\"subscribeInner\">\n          <h1 className=\"title is-2\">Oops?</h1>\n\n          <button onClick={back} className=\"button is-primary\">\n            BACK\n          </button>\n        </div>\n      )}\n    </div>\n  )\n})\n"],"sourceRoot":""}