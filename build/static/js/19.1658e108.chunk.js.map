{"version":3,"sources":["styles/AccountInfo.module.scss","components/Account/EditBillingInfomration.js"],"names":["module","exports","EditBilling","observer","props","store","useContext","AccountStore","useState","renderBilling","setRenderBillling","showForm","event","preventDefault","handleChange","set","target","id","value","updateBilling","a","className","style","marginBottom","poochInput","type","placeholder","onChange","height","states","map","state","abbreviation","key","name","Link","onClick","href","textAlign","accountSubSectionHeader","console","log","customer","toJS","billingInfo","address1","address2","city","zipcode"],"mappings":"oHACAA,EAAOC,QAAU,CAAC,kBAAoB,uCAAuC,qBAAuB,0CAA0C,wBAA0B,6CAA6C,KAAO,0BAA0B,WAAa,gCAAgC,YAAc,iCAAiC,oBAAsB,yCAAyC,cAAgB,qC,0mFCkBpZC,EAAcC,aAAS,SAAAC,GAClC,IAAMC,EAAQC,qBAAWC,KADkB,EAEAC,oBAAS,GAFT,mBAEpCC,EAFoC,KAErBC,EAFqB,KAKrCC,EAAW,SAAAC,GACfA,EAAMC,iBACNH,GAAmBD,IAGfK,EAAe,SAAAF,GACnBP,EAAMU,IAAIH,EAAMI,OAAOC,GAAIL,EAAMI,OAAOE,QAEpCC,EAAa,uCAAG,WAAMP,GAAN,SAAAQ,EAAA,sEACdf,EAAMc,gBADQ,OAEpBT,GAAmBD,GAFC,2CAAH,sDAKnB,OAAKA,EAyBD,6BACE,yBAAKY,UAAU,aAAaC,MAAO,CAAEC,aAAc,UACjD,yBAAKF,UAAU,SACb,uBAAGA,UAAU,WACX,6CACA,2BACEA,UAAW,SAAWG,aACtBC,KAAK,OACLR,GAAG,YACHS,YAAY,aACZC,SAAUb,MAIhB,yBAAKO,UAAU,SACb,uBAAGA,UAAU,WACX,4CACA,2BACEA,UAAW,SAAWG,aACtBC,KAAK,OACLR,GAAG,WACHS,YAAY,YACZC,SAAUb,OAKlB,yBAAKO,UAAU,SACb,uBAAGA,UAAU,WACX,4CACA,2BACEA,UAAW,SAAWG,aACtBC,KAAK,OACLR,GAAG,WACHS,YAAY,YACZC,SAAUb,MAIhB,yBAAKO,UAAU,SACb,4CACA,uBAAGA,UAAU,WACX,2BACEA,UAAW,SAAWG,aACtBC,KAAK,OACLR,GAAG,WACHS,YAAY,YACZC,SAAUb,MAIhB,yBAAKO,UAAU,cACb,yBAAKA,UAAU,SACb,uBAAGA,UAAU,WACX,wCACA,4BACEA,UAAWG,aACXP,GAAG,QACHS,YAAY,QACZC,SAAUb,EACVQ,MAAO,CAAEM,OAAQ,SAEhBC,EAAOC,KAAI,SAAAC,GAAK,OACf,4BAAQb,MAAOa,EAAMC,aAAcC,IAAKF,EAAMC,cAC3CD,EAAMG,YAMjB,yBAAKb,UAAU,SACb,uCACA,uBAAGA,UAAU,WACX,2BACEA,UAAW,SAAWG,aACtBC,KAAK,OACLR,GAAG,OACHS,YAAY,OACZC,SAAUb,OAKlB,yBAAKO,UAAU,SACb,uBAAGA,UAAU,WACX,sCACA,2BACEA,UAAW,SAAWG,aACtBC,KAAK,MACLR,GAAG,MACHS,YAAY,MACZC,SAAUb,MAIhB,yBAAKO,UAAU,oBACb,uBAAGA,UAAU,uBACX,4BAAQA,UAAWc,OAAMC,QAASzB,EAAU0B,KAAK,IAAjD,WAIF,uBAAGhB,UAAU,UAAUC,MAAO,CAAEgB,UAAW,UACzC,4BACEjB,UAAU,oBACVI,KAAK,SACLW,QAASjB,GAHX,qBA7HN,6BACE,uBAAGE,UAAWkB,2BAAd,mBACCC,QAAQC,IAAIpC,EAAMqC,UAClBrC,EAAMqC,UACL,8BACE,2BAAIC,YAAKtC,EAAMqC,SAASE,YAAYV,OACpC,2BAAIS,YAAKtC,EAAMqC,SAASE,YAAYC,WACpC,2BAAIF,YAAKtC,EAAMqC,SAASE,YAAYE,WACpC,2BACGH,YAAKtC,EAAMqC,SAASE,YAAYG,MAAO,IACvCJ,YAAKtC,EAAMqC,SAASE,YAAYb,OAAQ,IACxCY,YAAKtC,EAAMqC,SAASE,YAAYI,WAKvC,uBAAG3B,UAAWc,OAAMC,QAASzB,EAAU0B,KAAK,IAA5C","file":"static/js/19.1658e108.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"accountPageHeader\":\"AccountInfo_accountPageHeader__3PT-I\",\"accountSectionHeader\":\"AccountInfo_accountSectionHeader__u8Du1\",\"accountSubSectionHeader\":\"AccountInfo_accountSubSectionHeader__rUWSb\",\"Link\":\"AccountInfo_Link__1OAI7\",\"poochInput\":\"AccountInfo_poochInput__1AR4z\",\"poochButton\":\"AccountInfo_poochButton__3soeJ\",\"stripeElementsInput\":\"AccountInfo_stripeElementsInput__21gKf\",\"StripeElement\":\"AccountInfo_StripeElement__1q-TZ\"};","import React, { useContext, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { toJS } from 'mobx'\nimport AccountStore from '../../stores/AccountStore'\nimport states from '../../states.json'\nimport {\n  accountSubSectionHeader,\n  Link,\n  poochInput,\n} from '../../styles/AccountInfo.module.scss'\n\n/**\n * EditBilling Observes AccountStore\n * When `Billing Address` is clicked EditBilling revieals a form\n * that updates the billing address when submited. `store.updateBilling()` is called\n * and a `<Notify/>` message is returned on a result.\n *\n */\n\nexport const EditBilling = observer(props => {\n  const store = useContext(AccountStore)\n  const [renderBilling, setRenderBillling] = useState(false)\n\n  //state\n  const showForm = event => {\n    event.preventDefault()\n    setRenderBillling(!renderBilling)\n  }\n\n  const handleChange = event => {\n    store.set(event.target.id, event.target.value)\n  }\n  const updateBilling = async event => {\n    await store.updateBilling()\n    setRenderBillling(!renderBilling)\n  }\n\n  if (!renderBilling) {\n    return (\n      <div>\n        <p className={accountSubSectionHeader}>Billing Address</p>\n        {console.log(store.customer)}\n        {store.customer && (\n          <span>\n            <p>{toJS(store.customer.billingInfo.name)}</p>\n            <p>{toJS(store.customer.billingInfo.address1)}</p>\n            <p>{toJS(store.customer.billingInfo.address2)}</p>\n            <p>\n              {toJS(store.customer.billingInfo.city)}{' '}\n              {toJS(store.customer.billingInfo.state)}{' '}\n              {toJS(store.customer.billingInfo.zipcode)}\n            </p>\n          </span>\n        )}\n        {/*eslint-disable-next-line*/}\n        <a className={Link} onClick={showForm} href=\"\">\n          Edit Billing Address\n        </a>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <div className=\"field-body\" style={{ marginBottom: '.5rem' }}>\n          <div className=\"field\">\n            <p className=\"control\">\n              <lable>First Name</lable>\n              <input\n                className={'input ' + poochInput}\n                type=\"text\"\n                id=\"firstName\"\n                placeholder=\"First Name\"\n                onChange={handleChange}\n              />\n            </p>\n          </div>\n          <div className=\"field\">\n            <p className=\"control\">\n              <lable>Last Name</lable>\n              <input\n                className={'input ' + poochInput}\n                type=\"text\"\n                id=\"lastName\"\n                placeholder=\"Last Name\"\n                onChange={handleChange}\n              />\n            </p>\n          </div>\n        </div>\n        <div className=\"field\">\n          <p className=\"control\">\n            <lable>Address 1</lable>\n            <input\n              className={'input ' + poochInput}\n              type=\"text\"\n              id=\"address1\"\n              placeholder=\"Address 1\"\n              onChange={handleChange}\n            />\n          </p>\n        </div>\n        <div className=\"field\">\n          <lable>Address 2</lable>\n          <p className=\"control\">\n            <input\n              className={'input ' + poochInput}\n              type=\"text\"\n              id=\"address2\"\n              placeholder=\"Address 2\"\n              onChange={handleChange}\n            />\n          </p>\n        </div>\n        <div className=\"field-body\">\n          <div className=\"field\">\n            <p className=\"control\">\n              <lable>State</lable>\n              <select\n                className={poochInput}\n                id=\"state\"\n                placeholder=\"State\"\n                onChange={handleChange}\n                style={{ height: '54px' }}\n              >\n                {states.map(state => (\n                  <option value={state.abbreviation} key={state.abbreviation}>\n                    {state.name}\n                  </option>\n                ))}\n              </select>\n            </p>\n          </div>\n          <div className=\"field\">\n            <lable>City</lable>\n            <p className=\"control\">\n              <input\n                className={'input ' + poochInput}\n                type=\"text\"\n                id=\"city\"\n                placeholder=\"City\"\n                onChange={handleChange}\n              />\n            </p>\n          </div>\n        </div>\n        <div className=\"field\">\n          <p className=\"control\">\n            <lable>Zip</lable>\n            <input\n              className={'input ' + poochInput}\n              type=\"zip\"\n              id=\"zip\"\n              placeholder=\"Zip\"\n              onChange={handleChange}\n            />\n          </p>\n        </div>\n        <div className=\"field is-grouped\">\n          <p className=\"control is-expanded\">\n            <button className={Link} onClick={showForm} href=\"\">\n              Cancel\n            </button>\n          </p>\n          <p className=\"control\" style={{ textAlign: 'right' }}>\n            <button\n              className=\"button btn-orange\"\n              type=\"submit\"\n              onClick={updateBilling}\n            >\n              Update Billing\n            </button>\n          </p>\n        </div>\n      </div>\n    )\n  }\n})\n"],"sourceRoot":""}