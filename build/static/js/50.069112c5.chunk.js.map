{"version":3,"sources":["components/Account/ResetPassword.js"],"names":["ResetPassword","observer","store","useContext","AccountStore","useState","error","setError","password","setPassword","repassword","setRePassword","getParameterByName","name","url","window","location","console","log","replace","results","RegExp","exec","decodeURIComponent","resetPassword","event","a","preventDefault","resetUrl","errors","hash","setTimeout","onSubmit","style","maxWidth","margin","className","marginBottom","type","id","placeholder","onChange","target","value"],"mappings":"wPAcaA,EAAgBC,aAAS,WACpC,IAAMC,EAAQC,qBAAWC,KADiB,EAGhBC,oBAAS,GAHO,mBAGnCC,EAHmC,KAG5BC,EAH4B,OAIVF,mBAAS,IAJC,mBAInCG,EAJmC,KAIzBC,EAJyB,OAKNJ,mBAAS,IALH,mBAKnCK,EALmC,KAKvBC,EALuB,KAOpCC,EAAqB,SAACC,EAAMC,GAC3BA,IAAKA,EAAMC,OAAOC,UACvBC,QAAQC,IAAIL,EAAMC,GAElBD,EAAOA,EAAKM,QAAQ,UAAW,QAC/B,IACEC,EADU,IAAIC,OAAO,OAASR,EAAO,qBACrBS,KAAKR,GACvB,OAAKM,EACAA,EAAQ,GACNG,mBAAmBH,EAAQ,GAAGD,QAAQ,MAAO,MAD5B,GADH,MAKjBK,EAAa,uCAAG,WAAMC,GAAN,eAAAC,EAAA,yDACpBD,EAAME,iBACFjB,IAAeF,EAFC,wBAGdoB,EAAWhB,EAAmB,YAClCK,QAAQC,IAAIU,GAJM,SAKC1B,EAAMsB,cAAchB,EAAUoB,GAL/B,cAMRC,SACRd,OAAOC,SAASc,KAAO,UAPP,wBAUlBvB,GAAS,GACTwB,YAAW,WACTxB,GAAS,KACR,KAbe,4CAAH,sDAiBnB,OACE,0BACEyB,SAAUR,EACVS,MAAO,CAAEC,SAAU,QAASC,OAAQ,SAEnC7B,GACC,uBAAG8B,UAAU,kBAAkBH,MAAO,CAAEI,aAAc,SAAtD,+BAIF,yBAAKD,UAAU,SACb,2BACEA,UAAU,QACVE,KAAK,WACLC,GAAG,WACHC,YAAY,uBACZC,SAAU,SAAAhB,GAAK,OAAIhB,EAAYgB,EAAMiB,OAAOC,WAGhD,yBAAKP,UAAU,SACb,2BACEA,UAAU,QACVE,KAAK,WACLC,GAAG,aACHC,YAAY,yBACZC,SAAU,SAAAhB,GAAK,OAAId,EAAcc,EAAMiB,OAAOC,WAGlD,2BAAOL,KAAK,SAASK,MAAM,QAAQP,UAAU","file":"static/js/50.069112c5.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react'\nimport { observer } from 'mobx-react'\n\nimport AccountStore from '../../stores/AccountStore'\n\n/**\n * ResetPassword observes AccountStore\n *\n * ResetPassword is only accessable from a user email.\n * The url peram that is required by ResetPassword is generated by shopify and\n * sent with the ResetPassword email.\n *\n */\n\nexport const ResetPassword = observer(() => {\n  const store = useContext(AccountStore)\n\n  const [error, setError] = useState(false)\n  const [password, setPassword] = useState('')\n  const [repassword, setRePassword] = useState('')\n\n  const getParameterByName = (name, url) => {\n    if (!url) url = window.location\n    console.log(name, url)\n    /* eslint-disable-next-line */\n    name = name.replace(/[\\[\\]]/g, '\\\\$&')\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url)\n    if (!results) return null\n    if (!results[2]) return ''\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '))\n  }\n\n  const resetPassword = async event => {\n    event.preventDefault()\n    if (repassword === password) {\n      var resetUrl = getParameterByName('resetUrl')\n      console.log(resetUrl)\n      const auth = await store.resetPassword(password, resetUrl)\n      if (!auth.errors) {\n        window.location.hash = '/login'\n      }\n    } else {\n      setError(true)\n      setTimeout(() => {\n        setError(false)\n      }, 3000)\n    }\n  }\n\n  return (\n    <form\n      onSubmit={resetPassword}\n      style={{ maxWidth: '400px', margin: 'auto' }}\n    >\n      {error && (\n        <p className=\"has-text-danger\" style={{ marginBottom: '15px' }}>\n          Passwords are not the same!\n        </p>\n      )}\n      <div className=\"field\">\n        <input\n          className=\"input\"\n          type=\"password\"\n          id=\"password\"\n          placeholder=\"Enter a New Password\"\n          onChange={event => setPassword(event.target.value)}\n        />\n      </div>\n      <div className=\"field\">\n        <input\n          className=\"input\"\n          type=\"password\"\n          id=\"repassword\"\n          placeholder=\"Re Enter your Password\"\n          onChange={event => setRePassword(event.target.value)}\n        />\n      </div>\n      <input type=\"submit\" value=\"Reset\" className=\"button is-info\" />\n    </form>\n  )\n})\n"],"sourceRoot":""}